.statistic
  .page-title
    .divider1
    Usage
  .divider2
  .stat_graph
    .lhs.pull-left
      %b.medium-text
        Remaining Usable Assessments: #{@company.unlocked_invites_count}
    .rhs.pull-left
      .span5.first
        .graph
          - total = @company.assessment_statistics[:assessments_purchased]
          - assessments_sent = @company.assessment_statistics[:assessments_sent]
          - assessments_completed = @company.assessment_statistics[:assessments_completed]
          - sent_percentage = 0
          - completed_percentage = 0
          - if total != 0 && assessments_sent != 0
            - sent_percentage = ((assessments_sent.to_i * 100) / total)
            - completed_percentage = ((assessments_completed.to_i * 100) / assessments_sent)
            .column.darkBlue-bg{:style => "width: 100%"}
            / .column.lightBlue-bg{:style => "width: #{completed_percentage}%"}
            .column.orange-bg{:style => "width: #{completed_percentage}%"}
            //.column.orange-bg{:style => "width: 20%"}
      .span14.medium-text.gray-darker
        .span.stop.darkBlue-bg 
        .span 
          Total Assessments Sent:  
          %b
            #{@company.assessment_statistics[:assessments_sent].to_i}
        .span.stop.orange-bg.left-offset1
        .span 
          Total Assessments Answered:  
          %b
            #{@company.assessment_statistics[:assessments_completed].to_i}
          
        .clr
      .clr
    .clr
  .divider3
  .list-snippet-titles.large-text.clearfix
    .span4.first
      Packages
    .span5
      Package Size
    .span3
      Assessments Sent
    .span3.left-offset2
      Assessments Answered
    .span5.left-offset2
      Activated Date        
    .span4
      Valid Till
    .span
      Status
    .clr
    .divider2          

  %ul
    - @subscriptions.each_with_index do |subscription, index|
      %li.list-snippet.border-bottom-grayLighter
        .span4.first
          Package #{@subscriptions.length - index}
        .span5
          #{subscription.assessments_purchased}
        .span3
          #{subscription.assessments_sent}
        .span3.left-offset2
          #{subscription.assessments_completed}
        .span5.left-offset2
          - valid_from = Date.parse(subscription.valid_from)
          #{valid_from.strftime("%d/%m/%Y")}
        .span4
          - valid_to = DateTime.parse(subscription.valid_to)
          #{valid_to.strftime("%d/%m/%Y")}
        .span{ class: (valid_to > Time.now) ? "success-text" : "alert-text" }
          #{(valid_to > Time.now) ? "Active" : "Expired"}
          -#toggle btween :".success-text" and ".alert-text"
        .clr
        .divider1
        
  .pull-right
    - if (@subscriptions.present?)
      .muted.extra-medium-text
        .span.line-height2
          Go to Page
        %select.span2{onchange:"location = this.options[this.selectedIndex].value;"}
          - @subscriptions.total_pages.times do |page|
            %option{selected: params[:page].to_i == (page + 1),value: statistics_company_path(@company, params.merge(:page => page + 1)), }
              = page + 1
        .clr       
  .clr  


