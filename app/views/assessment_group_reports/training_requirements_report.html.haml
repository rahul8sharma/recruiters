- content_for :stylesheets do
  = wicked_pdf_stylesheet_link_tag "training_requirements_report"  
    
- if @view_mode == "html"
  :css
    .training_requirements_report .inner{margin-top:80px;} 
    .about_us {margin-top:0px;} 
- else
  :css
    .training_requirements_report .inner{margin-top:0px;min-height:800px}     
    .about_us {margin-top:100px;} 
    
- content_for :report_link do
  - if @view_mode == "html"
    = link_to "View Printable PDF", download_report_company_training_requirement_group_url(:company_id => @training_requirement_group.company_id, :id => @training_requirement_group.id, :format => "pdf", :host => Rails.application.config.action_mailer.default_url_options[:host]), :class => "btn btn-warning"
    


= render :template => "assessment_group_reports/training_requirements_report/page1"
.page-break

- all_factor_scores = @report_data[:factor_scores]
- factor_scores = Hash[all_factor_scores.keys[0..9].map{|key| [key,all_factor_scores[key]] }]
- scores_step = Rails.application.config.reports[@view_mode]["training_requirements_report"]["scores_step"]
- if factor_scores.present?
  - (0..factor_scores.keys.length-1).step(scores_step) do |step|  
    - step_factor_scores = factor_scores.slice(*all_factor_scores.keys[step..(step+(scores_step - 1))])
    = render :template => "assessment_group_reports/training_requirements_report/page2", :locals => { :factor_scores => step_factor_scores, :step => step }
    .page-break  


.common-top-trangle
  .common-bottom-trangle
    = render :partial => "shared/reports/pdf/about_us.pdf.haml"
    .page-break

    = render :partial => "shared/reports/pdf/legal_disclaimer.pdf.haml"
    .page-break

- if @view_mode == "html"
  = render :partial => "shared/reports/pdf/report_footer.pdf.haml", :locals => { :force => true, :last_page => true }
