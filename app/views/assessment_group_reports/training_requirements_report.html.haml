- content_for :stylesheets do
  = wicked_pdf_stylesheet_link_tag "training_requirements_report/html"

- content_for :javascripts do
  = wicked_pdf_javascript_include_tag "jquery"
  = wicked_pdf_javascript_include_tag "jquery_ujs"
  = wicked_pdf_javascript_include_tag 'highcharts-custom'
  = wicked_pdf_javascript_include_tag 'trr-pie'

- if @view_mode == "html"
  :css
    .training_requirements_report .inner{margin-top:80px;} 
    .about_us {margin-top:0px;} 
- else
  :css
    .training_requirements_report .inner{margin-top:0px;min-height:800px}     
    .about_us {margin-top:100px;} 

- content_for :report_link do
  - if @view_mode == "html"
    - if @report.pdf_button
      - url = download_report_company_training_requirement_group_url(:company_id => @report_data[:company_id], :id => @training_requirement_group.id, :format => "pdf", :host => Rails.application.config.action_mailer.default_url_options[:host])
      = link_to("View Printable PDF", url, :class => "btn btn-warning span print-btn", style: "margin: 20px 0 0 0;")

- if @report.cover_page
  = render :partial => "assessment_group_reports/training_requirements_report/html/cover_page"
 

- if @report.include_competencies  
  - if @report.overview_competency_average_scores
    = render :partial => "assessment_reports/training_requirements_report/html/competency_overview"
  - if @report.competency_values_measured
    = render :partial => "assessment_reports/training_requirements_report/html/competencies_measured"
    
- limiter = Rails.application.config.reports["html"]["training_requirements_report"]["graph_limiter_on_training_requirement_report"]
- scores_step = Rails.application.config.reports["html"]["training_requirements_report"]["pie_charts_step"]

- less_favorable_factors = @report_data[:factor_scores].select{|factor, factor_data| factor_data[:percentage_users] > 0 }
- top_training_needs = less_favorable_factors.select{|key,value| less_favorable_factors.keys[0..limiter-1].include?(key) }
- if @report.show_top_training_needs
  - (0..top_training_needs.keys.length-1).step(scores_step) do |step|
    - step_top_training_needs = top_training_needs.slice(*top_training_needs.keys[step..(step+(scores_step - 1))])
    = render :partial => "assessment_reports/training_requirements_report/html/top_training_needs", :locals => { :factor_scores => step_top_training_needs, :step => step }
  
- if @report.show_remaining_traits  
  - remaining_factor_scores = @report_data[:factor_scores].except(*top_training_needs.keys)
  - (0..remaining_factor_scores.keys.length-1).step(scores_step) do |step|
    - step_factor_scores = remaining_factor_scores.slice(*remaining_factor_scores.keys[step..(step+(scores_step - 1))])
    = render :partial => "assessment_reports/training_requirements_report/html/remaining_traits", :locals => { :factor_scores => step_factor_scores, :step => step }
    
- if @report.include_competencies
  - if @report.data_points_competencies
    = render :partial => "assessment_reports/training_requirements_report/html/competencies_data_points"
  - if @report.data_points_traits_under_competencies
    = render :partial => "assessment_reports/training_requirements_report/html/competency_trait_data_points"

- if @report.data_points_traits && !@report.include_competencies
  = render :partial => "assessment_reports/training_requirements_report/html/trait_data_points"

- if @report.areas_of_improvements
  - scores_step = Rails.application.config.reports["html"]["training_requirements_report"]["scores_step"]
  - (0..less_favorable_factors.keys.length-1).step(scores_step) do |step|
    - step_factor_scores = less_favorable_factors.slice(*less_favorable_factors.keys[step..(step+(scores_step - 1))])
    = render :partial => "assessment_reports/training_requirements_report/html/areas_of_improvements", :locals => { :factor_scores => step_factor_scores, :step => step }

= render :partial => "shared/reports/html/about_us_trr"
= render :partial => "shared/reports/html/legal_disclaimer_trr"
