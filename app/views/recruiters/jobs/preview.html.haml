= content_for :stylesheets do
  = stylesheet_link_tag 'recruiters/jobs'
- content_for :javascripts do
  = javascript_include_tag "lib/raty/js/jquery.raty.js"
  = javascript_include_tag "jobs/preview"

- content_for :recruiter_title do
  .recruiter_title
    .content
      .main
        Job Preview
    .content
      .divider1
      .medium_text
        Your job has not been posted yet. Take a look at the information you entered.
      .divider1
- content_for :sidebar do
  .job_flow_lhs
    %ul
      - section_matched = false
      - Rails.application.config.recruiters[:job_posting_sections].each_with_index do |(section, title), index|
        %li{:class => section == @section ? (section_matched = true; "active") : (section_matched ? "" : "done")}
          #{ index + 1 }. #{ title }
  = render :partial => "recruiters/shared/help_block"

.rec_rhs
  = form_tag update_status_recruiters_job_path(:id => @job.uuid, :status => "pending"), :method => :put, "data-preview_job" => true, :class => "form-horizontal margin" do
    .form-actions.yellow_bg.margin_top
      .span8.first.medium_text
        If everything looks okay, scroll down to bottom and click on 
        %strong
          "Post Job" 
        to post the job.
      %button.pull-right{:class => "btn btn-info offset1", :type => "button"}
        %strong Post Job
      .clr

    .preview
      .heading.gray_bg
        Job Description
        .pull-right
          %a{:href => edit_recruiters_jobs_path(:id => @job.uuid, :section => "job-details"), :title => "Edit this section"}
            Edit
      .section  
        .medium_text.text_right.span5
          %strong Job Title
        .description.span10
          = @job.title
          -# Mahindra Satyam IT Job at Hyderabad, Bangalore, Pune: Technical Lead
      .section  
        .medium_text.text_right.span5
          %strong Functional Area of this Role
        - (@job.categories || []).each do |category|
          .description.span10
            = Vger::Spartan::Opus::JobCategory.find(category).name
      .section  
        .medium_text.text_right.span5
          %strong Job Profile
        - (@job.profiles || []).each do |profile|
          .description.span10
            = Vger::Spartan::Opus::Recommendation.find(profile).name
      .section  
        .medium_text.text_right.span5
          %strong Number of Openings
        .description.span10
          = @job.total_openings
      .section  
        .medium_text.text_right.span5
          %strong Job Location
        .description.span10
          - (@job.locations || []).each do |location|
            .highlight_badge.span
              = Vger::Penumbra::Geography.find(location).name
      .heading.gray_bg
        Job Requirements
        .pull-right
          %a{:href => edit_recruiters_jobs_path(:id => @job.uuid, :section => "job-requirements"), :title => "Edit this section"}
            Edit
      .section  
        .medium_text.text_right.span5
          %strong Years of Work Experience
        .description.span10
          2-6 yrs of Experience
      .section  
        .medium_text.text_right.span5
          %strong Qualifications
        - if @job.qualification
          - degrees = @job.qualification.degree_diploma
          - specializations = @job.qualification.specialization
          - degrees.zip(specializations).each do |degree, specialization|
            .description.span10
              #{Vger::Spartan::Opus::Recommendation.find(degree).name} in #{Vger::Spartan::Opus::Recommendation.find(specialization).name}
      .section  
        .medium_text.text_right.span5
          %strong Must Have Skills
        .description.span10
          - if @job.skill.must
            - skill_ids = @job.skill.must.skill_id
            - experiences = @job.skill.must.experience
            - skill_ids.zip(experiences).each do |skill, exp|
              .highlight_badge.span
                = Vger::Spartan::Opus::Recommendation.find(skill).name
                #{exp} years
      .section  
        .medium_text.text_right.span5
          %strong Nice to have Skills
        .description.span10
          - (@job.skill.nice.skill_id || []).each do |skill|
            .highlight_badge.span
              = Vger::Spartan::Opus::Recommendation.find(skill).name
      .section  
        .medium_text.text_right.span5
          %strong Job Description
        .description.span10
          = @job.description

      .heading.gray_bg
        Hiring Preferences
        .pull-right
          %a{:href => edit_recruiters_jobs_path(:id => @job.uuid, :section => "hiring-preferences"), :title => "Edit this section"}
            Edit
      .section  
        .medium_text.text_right.span5
          %strong Industries
        .description.span10
          - (@job.candidate.industry.id || []).each do |industry|
            .highlight_badge
              = Vger::Spartan::Opus::Recommendation.find(industry).name
      .section  
        .medium_text.text_right.span5
          %strong Locations
        .description.span10
          - (@job.candidate.location.id || []).each do |location|
            .highlight_badge.span
              = Vger::Penumbra::Geography.find(location).name
      .section  
        .medium_text.text_right.span5
          %strong Communication Skills
        .description.span10
          .span3
            Spoken English
          - if @job.skill.spoken.present?
            .span3
              %div{data: {"star" => true, "star_rating" => @job.skill.spoken.level.to_i}}
            .span3
              = skill_level_display(@job.skill.spoken.level.to_i)
          .clr
          .span3
            Written English
          - if @job.skill.written.present?
            .span3
              %div{data: {"star" => true, "star_rating" => @job.skill.written.level.to_i}}
            .span3
              = skill_level_display(@job.skill.written.level.to_i)
      .section  
        .medium_text.text_right.span5
          %strong Behavioral Traits
        .description.span10
          - (@job.trait || []).each do |trait|
            .highlight_badge.span
              #{Vger::Spartan::Dilios::Trait.find(trait).name}
      .section  
        .medium_text.text_right.span5
          %strong Gender
        .description.span10
          - if @job.candidate.personal.gender.present?
            #{Vger::Spartan::Dilios::Gender.find(@job.candidate.personal.gender).name}
      .section
        .medium_text.text_right.span5
          %strong Marital Status
        .description.span10
          - if @job.candidate.personal.marital_status.present?
            #{Vger::Spartan::Dilios::MaritalStatus.find(@job.candidate.personal.marital_status).name}

      .heading.gray_bg
        Compensation &amp; Logistics
        .pull-right
          %a{:href => edit_recruiters_jobs_path(:id => @job.uuid, :section => "logistics"), :title => "Edit this section"}
            Edit
      .section  
        .medium_text.text_right.span5
          %strong Type of Employment
        .description.span10
          - if @job.kind_of.present?
            .highlight_badge.span
              #{Vger::Spartan::Opus::KindOfJob.find(@job.kind_of).name}
      .section  
        .medium_text.text_right.span5
          %strong Annual Salary
        .description.span10
          Rs. #{@job.salary.min_range} to #{@job.salary.max_range} in Lakhs/Year
          - if (@job.salary.show != "show")
            .faded_light
              Do not disclose salary to candidates
      .section  
        .medium_text.text_right.span5
          %strong Perks Offered
        .description.span10
          - (@job.perk || []).each do |perk|
            .highlight_badge.span8.first
              #{Vger::Spartan::Opus::JobPerk.find(perk).name}
          - if @job.additional_perk.present?
            .highlight_badge.span8.first
              #{@job.additional_perk}
      .section  
        .medium_text.text_right.span5
          %strong Shift Timings
        .description.span10
          - (@job.time_slot || []).each do |slot|
            .highlight_badge.span
              = Vger::Spartan::Opus::TimeSlot.find(slot).name
      .section  
        .medium_text.text_right.span5
          %strong Weekly Offs on
        .description.span10
          - (@job.offday || []).each do |day|
            .highlight_badge.span
              #{Vger::Spartan::WeekDay.find(day).name}
      .section  
        .medium_text.text_right.span5
          %strong Additional Information
        .description.span10
          - (@job.additional_info || []).each do |info|
            .highlight_badge.span8.first
              #{info}

      .heading.gray_bg
        Additional Details
        .pull-right
          %a{:href => edit_recruiters_jobs_path(:id => @job.uuid, :section => "additional-details"), :title => "Edit this section"}
            Edit
      .section  
        .medium_text.text_right.span5
          %strong Application Instructions
        .description.span10
          #{@job.additional_detail.application_instruction}
      .section  
        .medium_text.text_right.span5
          %strong Are there specific companies where your required candidates would be working currently?
        .description.span10
          #{@job.additional_detail.candidate.company_history}
      .section  
        .medium_text.text_right.span5
          %strong Are there other job profiles such candidates have in the industry?
        .description.span10
          #{@job.additional_detail.candidate.job_title}
      .section  
        .medium_text.text_right.span5
          %strong Keywords or buzzwords that such candidates write on their profiles?
        .description.span10
          #{@job.additional_detail.candidate.keyword}
      .section  
        .medium_text.text_right.span5
          %strong Are there any kind of people that you do not want to hire?
        .description.span10
          #{@job.additional_detail.undesired}

      .heading.gray_bg
        Recruiter Details
        .pull-right
          %a{:href => edit_recruiters_jobs_path(:id => @job.uuid, :section => "company-details"), :title => "Edit this section"}
            Edit
      .section  
        .medium_text.text_right.span5
          %strong Company Name    
        .description.span10
          #{@job.company.name}
      .section  
        .medium_text.text_right.span5
          %strong About Company    
        .description.span10
          #{@job.company.description}
      .section  
        .medium_text.text_right.span5
          %strong Company  Website    
        .description.span10
          #{@job.company.url}
      .section  
        .medium_text.text_right.span5
          %strong Location    
        .description.span10
          #{@job.company.address}
      .section  
        .medium_text.text_right.span5
          %strong Address    
        .description.span10
          #{Vger::Penumbra::Geography.find(@job.company.location.geography_id.first).name}

      .heading.gray_bg
        Recruiter Contact Details
        .pull-right
          %a{:href => edit_recruiters_jobs_path(:id => @job.uuid, :section => "company-details"), :title => "Edit this section"}
            Edit
      .section  
        .medium_text.text_right.span5
          %strong Job ID (Internal)    
        .description.span10
          - if @job.contact_detail.present?
            #{@job.contact_detail.job_id}
      .section  
        .medium_text.text_right.span5
          %strong Application URL (if any)    
        .description.span10
          - if @job.contact_detail.present?
            #{@job.contact_detail.application_url}
      .section  
        .medium_text.text_right.span5
          %strong Hiring Manager Name    
        .description.span10
          = current_user.name
      .section  
        .medium_text.text_right.span5
          %strong Phone Number    
        .description.span10
          = current_user.phone
      .section  
        .medium_text.text_right.span5
          %strong Email id    
        .description.span10
          = current_user.email

    .form-actions
      %a.pull-left{:class => "", :href => recruiters_jobs_path(:id => @job.uuid, :section => "company-details")}
        Previous
      %button.pull-right{:class => "btn btn-info offset1", :type => "submit"}
        %strong Post Job
      %a.pull-right{:class => "", :href => recruiters_root_path}
        %strong save and continue later
      .clr
