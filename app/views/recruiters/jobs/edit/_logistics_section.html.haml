- content_for :recruiter_title do
  .recruiter_title
    .content
      .main
        Post a Job
    .content
      .divider1
      .medium_text
        Provide Logistics details of your job to attract more candidates
      .divider1

= form_tag recruiters_jobs_path(:id => @job.uuid, :section => @section), :method => :put, "data-logistics" => true, :class => "form-horizontal margin", "data-job_posting_form" => true do
  = hidden_field_tag "continue_later", false
  .control-group
    %label.control-label
      Type of Employment*
    .controls
      = select_tag("kind_of", options_from_collection_for_select(@master_data[:kind_of_job], :id, :name), :prompt => "Select the job type", :class => "span9 first fl_none", "data-preselect" => @job.try(:kind_of))
  .control-group
    %label.control-label
      Annual Salary*
    .controls
      %label.radio.span3.first
        %input#optionsRadios1{:checked => (@job.salary.present? ? @job.salary.range.first.to_i == 1 : false), :name => "salary[range][]", :type => "radio", :value => "1"}
          Fixed Range
      %label.radio.span3
        %input#optionsRadios2{:checked => (@job.salary.present? ? @job.salary.range.first.to_i == 2 : true), :name => "salary[range][]", :type => "radio", :value => "2"}
          No Constraint
  .control-group
    %label.control-label
    .controls
      .span.first 
        %strong.line_height2 Rs
      = select_tag("salary[min_range]", salary_options, :prompt => "<Min Salary>", :class => "span3 pull-left", "data-salary" => true, "data-preselect" => @job.try(:salary).try(:min_range), :disabled => (@job.salary.present? ? @job.salary.range.first.to_i != 1 : true))
      .span
        %strong.line_height2 To
      = select_tag("salary[max_range]", salary_options, :prompt => "<Max Salary>", :class => "span3 pull-left", "data-salary" => true, "data-preselect" => @job.try(:salary).try(:max_range), :disabled => (@job.salary.present? ? @job.salary.range.first.to_i != 1 : true))
      .span
        %strong.line_height2 In Lakhs/ Year
    .controls
      %span.error.help-inline{:for => :max_salary, :generated => "true"}
  .control-group
    %label.control-label
    .controls
      %label.checkbox
        = check_box_tag("salary[show]", "show", @job.try(:salary).try(:show) == "show")
        -#%input{:type => "checkbox", :value => ""}
        Do not disclose salary to candidates

  .control-group
    %label.control-label.pull-left
      Perks Offered 
    .span10
      - @master_data[:perks].each_with_index do |perk, index|
        %label.checkbox.span5.first
          = check_box_tag("perk[]", perk.id, (@job.perk.present? ? @job.perk : []).include?(perk.id.to_s))
          #{ perk.name }
        .clr

  .control-group
    %label.control-label
      
    .controls
      .medium_text Additional Perks (if any)
      = text_area_tag("additional_perk", @job.try(:additional_perk), :placeholder => "Type additional perks here", :rows => 4, :class => "span10 first", "data-preselect" => @job.try(:additional_perk))

  .control-group
    %label.control-label.pull-left
      Shift Timings
    .span10
      - @master_data[:time_slots].each_with_index do |slot, index|
        %label.checkbox.span5.first
          = check_box_tag("time_slot[]", slot.id, (@job.time_slot.present? ? @job.time_slot : []).include?(slot.id.to_s))
          #{ slot.name }
        .clr

  .control-group
    %label.control-label.pull-left
      Weekly Offs on
    .span10
      - @master_data[:weekdays].each_with_index do |weekday, index|
        %label.checkbox.span5.first
          = check_box_tag("offday[]", weekday.id, (@job.offday.present? ? @job.offday : []).include?(weekday.id.to_s))
          #{ weekday.name }
        .clr
  .control-group
    %label.control-label.pull-left
      Additional Information
    .span10
      %label.checkbox.span5.first
        = check_box_tag("involves_travel", true, (@job.involves_travel.present? ? (@job.involves_travel == "true" ? true : false) : false))
        = additional_info_enum[:involves_travel]
      %label.checkbox.span5
        = check_box_tag("government_job", true, (@job.government_job.present? ? (@job.government_job == "true" ? true : false) : false))
        = additional_info_enum[:government_job]
      .clr
      %label.checkbox.span5.first
        = check_box_tag("own_vehicle", true, (@job.own_vehicle.present? ? (@job.own_vehicle == "true" ? true : false) : false))
        = additional_info_enum[:own_vehicle]
      %label.checkbox.span5
        = check_box_tag("walkin", true, (@job.walkin.present? ? (@job.walkin == "true" ? true : false) : false))
        = additional_info_enum[:walkin]
      .clr


  .form-actions
    %a.pull-left{:class => "", :href => edit_recruiters_jobs_path(:id => @job.uuid, :section => @prev_section)}
      Previous
    %button.pull-right{:class => "btn btn-info offset1", :type => "submit"}
      %strong Next Step
    %a.pull-right{:class => "", :href => "#", :data => {"continue_later" => true}}
      %strong save and continue later
    .clr
