= form_tag recruiters_jobs_path(:id => @job.uuid, :section => @section), :method => :put, "data-hiring_preferences" => true, :class => "form-horizontal margin" do
  .control-group
    %label.control-label
      Do you want to hire candidates from particular industries?
    .controls
      = select_tag("work_experience[][industry]", options_from_collection_for_select(@master_data[:industries], :id, :name), :prompt => "Select one or more", class: "span9 first fl_none", "data-preselect" => "job.try(:industries).try(:first).try(:id)", "data-job_industry_pseudo_select" => true)
      %div{:data => {"preferred-job_industry-container" => true}}
    -#
      %select.span9.first.fl_none
        %option Select the job type
        %option 1
      .badge_label.clearfix.span9.first
        .badge_count
          1
        .badge_content
          Education
        %a.close{"data-dismiss" => "alert", :type => "button"} Ã—
  .control-group
    %label.control-label
      Do you want to hire candidates from a particular location(s)?
    .controls
      = select_tag("work_experience[][location][query_options][geography_id]", top_list_for_select(:india_cities), :prompt => "Select one or more", class: "span9 first fl_none", "data-preselect" => "job.try(:locations).try(:first).try(:geography_id)", "data-job_location_pseudo_select" => true)
      %div{:data => {"preferred-job_location-container" => true}}

    -#
      %select.span9.first.fl_none
        %option Select one or more
        %option 1
  .control-group
    %label.control-label
      Communication Skills 
      %br/
      required for this job

  .control-group
    %label.control-label.font_normal
      Spoken English
    .controls
      = select_tag(:level, skill_level_options, :prompt => "Select one", :class => "span7 first fl_none")
  .control-group
    %label.control-label.font_normal
      Written English
    .controls
      = select_tag(:level, skill_level_options, :prompt => "Select one", :class => "span7 first fl_none")
  .control-group.margin
    %label.control-label
      Preferred Behavioral Traits
      .label_subtitle 
        Select upto 6 options
    .controls.behavioral_traits
      - @master_data[:traits].each_with_index do |trait, index|
        %label.checkbox.traits_badge
          = check_box_tag("job[traits][query_options][id][]", trait.id, false, :class => "")
          #{ trait.name }
  .control-group.error
    .controls
      %span.error.help-inline{:for => "job[traits][query_options][id][]", :generated => "true"}
      -#
        -10.times do
          -3.times do  
            %label.checkbox.traits_badge
              -#do for selected lable jst add "active" class EXP - %label.checkbox.traits_badge.active
              %input.hide{:type => "checkbox", :value => ""}
              some text
  .control-group
    %label.control-label
      Preferred Gender
    .controls
      - @master_data[:gender].each_with_index do |gender, index|
        %label.radio.span3{:class => index == 0 ? "first" : ""}
          = radio_button_tag("basic[personal][gender][query_options][id]", gender.id, (@basic[:gender] rescue nil).try(:id) == gender.id)
          #{ gender.name }
      %label.radio.span3
        %input#optionsRadios2{:checked => "", :name => "basic[personal][gender][query_options][id]", :type => "radio", :value => ""}
          No Preference
      .clr
    -#
      %label.radio.span3.first
        %input#optionsRadios1{:checked => "", :name => "optionsRadios", :type => "radio", :value => "option1"}
          male
      %label.radio.span3
        %input#optionsRadios2{:checked => "", :name => "optionsRadios", :type => "radio", :value => "option2"}
          Female
      %label.radio.span3
        %input#optionsRadios2{:checked => "", :name => "optionsRadios", :type => "radio", :value => "option2"}
          No Preference
      .clr

  .control-group
    %label.control-label
      Preferred Marital Status
    .controls
      - @master_data[:marital_status].each_with_index do |status, index|
        %label.radio.span3{:class => index == 0 ? "first" : ""}
          = radio_button_tag("basic[personal][status][query_options][id]", status.id, (@basic[:marital_status] rescue nil).try(:id) == status.id)
          #{ status.name }
      %label.radio.span3
        %input#optionsRadios2{:checked => "", :name => "basic[personal][status][query_options][id]", :type => "radio", :value => "option2"}
          No Preference
      .clr
    -#
      %label.radio.span3.first
        %input#optionsRadios1{:checked => "", :name => "optionsRadios", :type => "radio", :value => "option1"}
          Single
      %label.radio.span3
        %input#optionsRadios2{:checked => "", :name => "optionsRadios", :type => "radio", :value => "option2"}
          Married
      %label.radio.span3
        %input#optionsRadios2{:checked => "", :name => "optionsRadios", :type => "radio", :value => "option2"}
          No Preference
      .clr
    .divider1

  .form-actions
    %a.pull-left{:class => "", :href => "#"}
      Previous
    %button.pull-right{:class => "btn btn-info offset1", :type => "submit"}
      %strong Next Step
    %a.pull-right{:class => "", :href => "#"}
      %strong save and continue later
    .clr

%script#preferred-job_industry{type: 'text/x-template'}
  = render :partial => "recruiters/jobs/edit/job_details/job_industry", locals: {job_industry: preferred_job_industry_template_struct}
%script#preferred-job_location{type: 'text/x-template'}
  = render :partial => "recruiters/jobs/edit/job_details/job_location", locals: {job_location: preferred_job_location_template_struct}