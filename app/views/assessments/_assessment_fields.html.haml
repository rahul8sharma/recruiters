= f.hidden_field :company_id, value: @assessment.company_id, :id => "input_company_id"
= f.hidden_field :report_configuration, :id => "input_config", value: @assessment.report_configuration.to_json
%input{:id => "report_type", :value => "suitability", :type => "hidden"}
    
.divider1
.control-group
  %label
    Select the Industry your Company belongs to
  %select.span10.first{name: 'assessment[industry_id]', id: 'select_industry'}
    %option{:value => ""}
      Industry
    - @industries.each do |id,industry|
      %option{:value => (industry.id), selected: (assessment.industry_id.to_s == industry.id.to_s || @company.industry_id.to_s == id.to_s)}
        = industry.name

  .clr
.control-group
  %label
    Select the Department (or Function) for which you are creating this Assessment
  %select.span12.first{name: 'assessment[functional_area_id]', id: 'select_functional_area'}
    %option{:value => ""}
      Department
    - @functional_areas.each do |id,functional_area|
      %option{:value => (functional_area.id), selected: (assessment.functional_area_id.to_s == id.to_s)}
        = functional_area.name
  .clr

.control-group
  %label
    Select Experience Range of the Job Role that you are creating this Assessment for
  %select.span7.first{name: 'assessment[job_experience_id]', id: 'select_job_experience'}
    %option{:value => ""}
      Experience
    - @job_experiences.each do |id,job_experience|
      %option{:value => (job_experience.id), selected: (assessment.job_experience_id.to_s == id.to_s)}
        = job_experience.display_text
  .clr
.control-group
  %label
    Enter a Title for the Assessment
  = f.text_field :name, :class => "span17 first", :placeholder => "(e.g. Senior Marketing Manager)"
  .clr

- if ["new","create"].include?(params[:action])
  = f.fields_for :sets do |set_form|
    = set_form.hidden_field :name, value: Rails.application.config.default_set["name"]
    = set_form.hidden_field :start_index, value: Rails.application.config.default_set["start_index"]
    = set_form.hidden_field :end_index, value: Rails.application.config.default_set["end_index"]
    - if !is_superadmin?
      = set_form.hidden_field :page_size, value: Rails.application.config.default_set["page_size"]
    - else
      .control-group
        %label
          Page Size
        = set_form.text_field :page_size, value: Rails.application.config.default_set["page_size"], :class => "first span17"
        .clr

.clr
- if is_superadmin?
  - if ["new","create"].include? params[:action]
    .control-group
      %label
        Select Assessment Type
      %select.span10.first{name: 'assessment[assessment_type]', id: 'set_assessment_type'}
        %option{:value => ""}
          Select Assessment Type
        - Vger::Resources::Assessment::ASSESSMENT_TYPES.sort.each do |assessment_type|
          %option{:value => assessment_type, selected: (assessment.assessment_type == assessment_type)}
            = assessment_type.titleize
      .clr
  - else
    = f.hidden_field :assessment_type, value: @assessment.assessment_type, :id => "set_assessment_type"    
  .control-group
    %label
      Select the Language for the Assessment
    %select.span10.first{name: 'assessment[language]', id: 'select_language'}
      - Rails.application.config.languages.each do |code, language|
        %option{:value => code, selected: (assessment.language == code)}
          = language

    .clr
  .control-group
    %label
      Select Custom Factual Information Form
    %select.span10.first{ name: "defined_form_id" }
      %option{ value: "" }
        Select Custom Factual Information Form
      - @defined_forms.each do |defined_form|
        %option{ value: defined_form.id }
          = defined_form.name
    .clr
  .control-group
    %label
      Select the Brand Partner
    %select.span10.first{name: 'assessment[brand_partner]', id: 'select_brand_partner'}
      %option{:value => ""}
        Select Brand Partner
      - Rails.application.config.brand_partners.each do |brand_partner, content|
        %option{:value => brand_partner, selected: (assessment.brand_partner == brand_partner)}
          = brand_partner.titleize
    .clr      
  .control-group
    %label
      Post Assessment Redirect URL (URL should start with 'http' or 'https')
    %input.span10.first{ name: 'assessment[redirect_url]', value: @assessment.redirect_url }
    .clr
  .control-group
    %label
      Custom Thank You Message
    %textarea.span10.first{ name: 'assessment[thank_you_message]' }
      = @assessment.thank_you_message
    .clr
  .control-group
    %label
      %input{ type: "checkbox", name: "assessment[enable_table_of_contents]", id: "enable_table_of_contents" }
      Enable Table of Contents
    .clr  
  .control-group
    %label
      %input{ type: "checkbox", name: "enable_training_requirements_report", id: "enable_training_requirements_report" }
      Enable Training Requirements Report for this assessment
    .clr  
  .control-group
    %label
      = f.check_box :show_help_text, id: "show_help_text"
      Show Help Text for Items?
    .clr  
  .control-group
    %label
      = f.check_box :set_applicant_id
      Set Applicant Id
    .clr
  .control-group  
    %label
      = f.check_box :is_functional_assessment, id: "is_functional_assessment"
      Is Functional Assessment
    .clr  
    
  .control-group  
    %label
      = f.check_box :should_send_notifications, id: "should_send_notifications"
      Send Report Notifications
    .clr  
  .control-group  
    %label
      = f.check_box :is_jq_assessment, id: "is_jq_assessment"
      Is JQ Assessment
    .clr  
  .control-group  
    %label
      = f.check_box :include_cocubes_scores_in_reoprts
      Include Cocubes Scores in Reports and Summary
    .clr  
- else
  = f.hidden_field :language, value: 'en'
  = f.hidden_field :assessment_type, value: @assessment.assessment_type || Vger::Resources::Assessment::AssessmentType::FIT, :id => "set_assessment_type"    
.divider2
