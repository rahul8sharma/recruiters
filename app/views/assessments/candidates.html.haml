.create-test.creat-test-show
  .inn.first
    .page-title.pull-left
      Test #{@assessment.id} - #{@assessment.name}
    %a.btn.pull-right{ href: add_candidates_company_assessment_path(:company_id => params[:company_id], :id => params[:id]) }
      .link-color Send This Test
  .clr
  .inn.gray-gradient
    .pull-left
      = render :partial => "shared/candidate-summary-nav"
    .pagination.pull-right
      = paginate @candidates
    .clr
    .divider2
    - if @candidates.empty?
      .medium-text.alert
        Test not sent to any candidate. To send this test, 
        %a{ href: add_candidates_company_assessment_path(:company_id => params[:company_id], :id => params[:id]), title: "Send test" } Click here
    - else    
      .list-snippet-titles.clearfix
        .span2
          ID
        .span10
          Candidate Name 
        .span6
          Test Status
        .span
          //Action
      %ul.unstyled
        - @candidates.each do |candidate|
          - candidate_assessment = @assessment.candidate_assessments.where(:methods => [:candidate_assessment_reports]).find{|x| x.candidate_id == candidate.id}
          %li.list-snippet
            .span2
              %a.default-color{:href=> candidate_company_assessment_path(:company_id => params[:company_id], :id => params[:id], :candidate_id => candidate.id), :title=>"JOM#{candidate.id}"} JOM#{candidate.id}
            .span10.first.lhs-border
              %a.default-color{:href=> candidate_company_assessment_path(:company_id => params[:company_id], :id => params[:id], :candidate_id => candidate.id), :title=>"Candidate1 Name"} 
                = h candidate.name
            .span6.lhs-border
              %a.default-color{:href=> candidate_company_assessment_path(:company_id => params[:company_id], :id => params[:id], :candidate_id => candidate.id), :title=> "#{candidate_assessment.overall_fitment_grade_id.present? ? 'Complete' : 'Pending'}" }  
                = candidate_assessment.overall_fitment_grade_id.present? ? 'Complete' : 'Pending'
            .span.lhs-border
              - if candidate_assessment.overall_fitment_grade_id.present?
                - report = candidate_assessment.candidate_assessment_reports[0] 
                - if report and report.status == "uploaded"
                  - pdf_url =  AWS::S3::S3Object.find(report.s3_keys["html"]["key"],report.s3_keys["html"]["bucket"]).url 
                  %a.underlined{:href => pdf_url, :title => "View Report", target: "_blank"}
                    View Report
                - else
                  Generating report...  
              - else    
                %a.underlined{:href => send_reminder_to_candidate_company_assessment_path(:company_id => params[:company_id], :id => params[:id], :candidate_id => candidate.id), :title => "Send Reminder"}
                  Send Reminder
  .inn
    .pagination.pull-right
      = paginate @candidates
      .clr
