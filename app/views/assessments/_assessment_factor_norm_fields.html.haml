- id_name = "assessment[job_assessment_factor_norms_attributes][#{index}][id]"
- factor_name = "assessment[job_assessment_factor_norms_attributes][#{index}][factor_id]"
- fa_name = "assessment[job_assessment_factor_norms_attributes][#{index}][functional_area_id]"
- industry_name = "assessment[job_assessment_factor_norms_attributes][#{index}][industry_id]"
- exp_name = "assessment[job_assessment_factor_norms_attributes][#{index}][job_experience_id]"
- norm_min_name = "assessment[job_assessment_factor_norms_attributes][#{index}][from_norm_bucket_id]"
- norm_max_name = "assessment[job_assessment_factor_norms_attributes][#{index}][to_norm_bucket_id]"
- check_name = "assessment[job_assessment_factor_norms_attributes][#{index}][_destroy]"
- critical_checkbox_name = "checkbox_critical"
- critical_field = "assessment[job_assessment_factor_norms_attributes][#{index}][critical]"

%li.item.checked
  //please toggle .checked class, add .checked when checkbox=checked, Otherwise remove it
  - if assessment_factor_norm.norm_min.to_f.zero? && assessment_factor_norm.id.nil?
    - if assessment_factor_norm.id.present?
      %input{name: (id_name), type: 'hidden', value: assessment_factor_norm.id, index: (index), disabled: 'disabled'}
    %input{name: (fa_name), type: 'hidden', value: assessment_factor_norm.functional_area_id, disabled: 'disabled', index: (index)}
    %input{name: (industry_name), type: 'hidden', value: assessment_factor_norm.industry_id, disabled: 'disabled', index: (index)}
    %input{name: (exp_name), type: 'hidden', value: assessment_factor_norm.job_experience_id, disabled: 'disabled', index: (index)}
    %input{name: (factor_name), type: 'hidden', value: assessment_factor_norm.factor_id, disabled: 'disabled', index: (index)}
    .pull-left 
      %input{name: "selected_factor", type: 'checkbox', id: "checkbox_factor_#{index}", index: (index), checked: assessment_factor_norm.id.present?}
    .pull-left
      %label{ for: "checkbox_factor_#{index}" }
        %b= assessment_factor_norm.factor.name
    .pull-right
      .span7.lhs-border
        //%input{name: (norm_min_name), class: 'white-box', type: 'text', value: (assessment_factor_norm.norm_min.to_f), disabled: 'disabled', index: (index)}
        
        %select{name: norm_min_name, disabled: 'disabled', index: (index)}
          - @norm_buckets.each do |norm_bucket|
            - if assessment_factor_norm.from_norm_bucket_id == norm_bucket.id
              %option{value: norm_bucket.id, selected:'selected'}
                = norm_bucket.name         
            - else
              %option{value: norm_bucket.id}
                = norm_bucket.name         
            
        to
        //%input{name: (norm_max_name), class: 'white-box', style: "float:right", type: 'text', value: (assessment_factor_norm.norm_max.to_f), disabled: 'disabled', index: (index)}
        
        %select{name: norm_max_name, disabled: 'disabled', index: (index)}
          - @norm_buckets.each do |norm_bucket|
            - if assessment_factor_norm.to_norm_bucket_id == norm_bucket.id
              %option{value: norm_bucket.id, selected:'selected'}
                = norm_bucket.name         
            - else
              %option{value: norm_bucket.id}
                = norm_bucket.name         
        
        .clr
      .span2.lhs-border
        %input{name: critical_field, type: 'hidden', id: "critical_#{index}", index: (index), value: (assessment_factor_norm.critical? ? "on" : "off"), disabled: 'disabled'}      
        %input{name: critical_checkbox_name, id: "critical_checkbox_#{index}", style: "float:right", type: 'checkbox', index: (index), checked: assessment_factor_norm.critical?, disabled: 'disabled'}

  - else
    - if assessment_factor_norm.id.present?
      %input{name: (id_name), type: 'hidden', value: assessment_factor_norm.id, index: (index)}
    %input{name: (fa_name), type: 'hidden', value: assessment_factor_norm.functional_area_id, index: (index)}
    %input{name: (industry_name), type: 'hidden', value: assessment_factor_norm.industry_id, index: (index)}
    %input{name: (exp_name), type: 'hidden', value: assessment_factor_norm.job_experience_id, index: (index)}
    %input{name: (factor_name), type: 'hidden', value: assessment_factor_norm.factor_id, index: (index)}
    .pull-left 
      %input{name: "selected_factor", type: 'checkbox', id: "checkbox_factor_#{index}", index: (index), checked: assessment_factor_norm.id.present?}
    .pull-left
      %label{ for: "checkbox_factor_#{index}" }
        %b= assessment_factor_norm.factor.name
    .pull-right
      .span7.lhs-border
        //%input{name: (norm_min_name), class: 'white-box', type: 'text', value: (assessment_factor_norm.norm_min.to_f), index: (index)}
        %select{name: norm_min_name, index: (index)}
          - @norm_buckets.each do |norm_bucket|
            - if assessment_factor_norm.from_norm_bucket_id == norm_bucket.id
              %option{value: norm_bucket.id, selected:'selected'}
                = norm_bucket.name         
            - else
              %option{value: norm_bucket.id}
                = norm_bucket.name         
        //%input{name: (norm_max_name), class: 'white-box', style: "float:right", type: 'text', value: (assessment_factor_norm.norm_max.to_f), index: (index)}
        to
        %select{name: norm_max_name, index: (index)}
          - @norm_buckets.each do |norm_bucket|
            - if assessment_factor_norm.to_norm_bucket_id == norm_bucket.id
              %option{value: norm_bucket.id, selected:'selected'}
                = norm_bucket.name         
            - else
              %option{value: norm_bucket.id}
                = norm_bucket.name         
        
        .clr
      .span2.lhs-border
        %input{name: critical_field, type: 'hidden', id: "critical_#{index}", index: (index), value: (assessment_factor_norm.critical? ? "on" : "off")}      
        %input{name: critical_checkbox_name, id: "critical_checkbox_#{index}", style: "float:right", type: 'checkbox', index: (index), checked: assessment_factor_norm.critical?}
  .clr
  .divider1
  %p= assessment_factor_norm.factor.definition

