- content_for :stylesheets do
  = wicked_pdf_stylesheet_link_tag "training_requirements"

- content_for :javascripts do
  = wicked_pdf_javascript_include_tag "jquery"
  = wicked_pdf_javascript_include_tag "jquery_ujs"
  = wicked_pdf_javascript_include_tag 'highcharts-custom'
  = wicked_pdf_javascript_include_tag 'trr-pie'

- if @view_mode == "html"
  :css
    .training_requirements_report .inner{margin-top:80px;} 
    .about_us {margin-top:0px;} 
- else
  :css
    .training_requirements_report .inner{margin-top:0px;min-height:800px}     
    .about_us {margin-top:100px;} 

- content_for :report_link do
  - if @view_mode == "html"
    = link_to "View Printable PDF", download_training_requirements_report_company_custom_assessment_url(:company_id => @assessment.company_id, :id => @assessment.id, :format => "pdf", :host => Rails.application.config.action_mailer.default_url_options[:host]), :class => "btn btn-warning"

- limiter = Rails.application.config.reports["pdf"]["training_requirements_report"]["graph_limiter_on_training_requirement_report"]
- scores_step = Rails.application.config.reports["pdf"]["training_requirements_report"]["pie_charts_step"]
- less_favorable_factors = @report_data[:factor_scores].select{|factor, factor_data| factor_data[:percentage_users] > 0 }
- top_training_needs = less_favorable_factors.select{|key,value| less_favorable_factors.keys[0..limiter-1].include?(key) }
- factor_scores = less_favorable_factors.select{|key,value| less_favorable_factors.keys[0..limiter-1].include?(key) }
- scores_step = Rails.application.config.reports["pdf"]["training_requirements_report"]["scores_step"]
- scores_step_pie = Rails.application.config.reports["pdf"]["training_requirements_report"]["scores_step_pie"]

= render :template => "assessment_reports/training_requirements_report/pdf/page1"
.page-break
- if @report.include_competencies  
  - if @report.overview_competency_average_scores
    = render :partial => "assessment_reports/training_requirements_report/pdf/competency_overview"
    .page-break
  - if @report.competency_values_measured
    = render :partial => "assessment_reports/training_requirements_report/pdf/competencies_measured"
    .page-break

- (0..factor_scores.keys.length-1).step(scores_step_pie) do |step|
  - step_factor_scores = factor_scores.slice(*factor_scores.keys[step..(step+(scores_step_pie - 1))])
  = render :template => "assessment_reports/training_requirements_report/pdf/page2", :locals => { :factor_scores => step_factor_scores, :step => step }
  .page-break  

- if @report.show_remaining_traits  
  - remaining_factor_scores = @report_data[:factor_scores].except(*top_training_needs.keys)
  - (0..remaining_factor_scores.keys.length-1).step(scores_step_pie) do |step|
    - step_factor_scores = remaining_factor_scores.slice(*remaining_factor_scores.keys[step..(step+(scores_step_pie - 1))])
    = render :partial => "assessment_reports/training_requirements_report/pdf/remaining_traits", :locals => { :factor_scores => step_factor_scores, :step => step }
    .page-break

- if @report.include_competencies  
  - if @report.data_points_competencies
    = render :partial => "assessment_reports/training_requirements_report/pdf/competencies_data_points"
    .page-break
  - if @report.data_points_traits_under_competencies
    = render :partial => "assessment_reports/training_requirements_report/pdf/competency_trait_data_points"
    .page-break
  
- (0..factor_scores.keys.length-1).step(scores_step) do |step|
  - step_factor_scores = factor_scores.slice(*factor_scores.keys[step..(step+(scores_step - 1))])
  = render :template => "assessment_reports/training_requirements_report/pdf/page3", :locals => { :factor_scores => step_factor_scores, :step => step }
  .page-break 
    
.common-top-trangle
  .common-bottom-trangle 
    = render :partial => "shared/reports/pdf/about_us.pdf.haml"
    .page-break   
    = render :partial => "shared/reports/pdf/legal_disclaimer.pdf.haml"