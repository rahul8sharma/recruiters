.inner
  .scores.favorable_factors
    .blue_bg_heading
      Scores of Factors measured under different 
      %b Competencies 
      .thumbnails
        .thumbnails_inn3
    .clr
    .indication
      .pull-left
        .pull-left.box
        .pull-left
          %b Desired/Acceptable Score
        .clr

      .left-offset1.pull-left 
        .pull-left.hexagon-icon.mid_favorable
        .pull-left
          %b Obtained Score

      .clr
    .scale
      .marker
        %br/
        Low
      .marker
        Below Average
      .marker
        %br/
        Average
      .marker
        Above Average
      .marker
        %br/
        High
      .clr
    .clr
    .frame
      .frame-title
        #{competency_name}: 
        %b #{competency_data[:grade]}
      %ul.unstyled.clearfix.scores_listing
        - competency_data[:factor_scores].each do |factor_name, factor_score|
          %li
            .lhs-sec.pull-left
              %div{ class: "span1 first hexagon-icon #{factor_score[:pass] ? 'favorable' : 'less_favorable'}" }
              -#use ".mid_favorable" or ".less_favorable" or ".favorable" to change the color of hexagon
              .span10
                .factor-name{ class: "#{factor_score[:pass] ? '' : 'underlined'}" }
                  = factor_name
            .rhs-sec.pull-right
              .slider
                - scale = factor_score[:scale]
                .pointer{ class: "position#{scale[:position]}" }
                -#Use position1, postion2...5. for pointer position
                .range{ class: "offset#{scale[:offset]} width#{scale[:width]}" }
                -#use offset0..offset4 and with this class use .width0...width4 (.width4 is 100%)
            .clr
            .factor-description
              = factor_score[:description]
            .clr
    .divider2
