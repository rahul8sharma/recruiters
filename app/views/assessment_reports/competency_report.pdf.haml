- content_for :javascripts do
  = wicked_pdf_javascript_include_tag "reports"

:css
  .report .competency_report .inner{margin-top:0px;}

- @factor_scores = @report.report_data[:competency_scores].map{|competency, competency_scores| competency_scores[:factor_scores] }.reduce({}){|factor_scores, _hash| _hash.merge(factor_scores) }
- competency_step = Rails.application.config.reports[@view_mode]["competency_step"]
- total = @report.report_hash[:competency_scores].keys.size

.competency_report
  - @report.report_configuration["pdf"]["sections"].each do |section_value|
    = render :partial => section_value["path"], :locals => { :section_value => section_value["children"] }

  / - competency_step = Rails.application.config.reports[@view_mode]["competency_step"]
  / - total = @report.report_hash[:competency_scores].keys.size
  / - competency_scores = @report.report_hash[:competency_scores].map{|key,value| [key,value] }
  / = render :template => "assessment_reports/competency_report/pdf/competency_report_page1", :locals => { competency_scores: competency_scores }
  / .page-break
  / = render :partial => "assessment_reports/competency_report/pdf/competency_report_guideline"
  / .page-break
  / - if @report.report_data[:include_cocubes_scores_in_reoprts]
  /   = render :partial => "assessment_reports/competency_report/pdf/aptitude_score"
  / .page-break
  / = render :partial => "assessment_reports/score_scale"
  
  / .page-break
  / = render :partial => "assessment_reports/competency_report/pdf/explanation_scores"
  / .page-break
  
  / - if @report.report_data[:enable_competency_desired_ranges]
  /   = render :partial => "assessment_reports/competency_report/pdf/custom_competency_score_overview", :locals => { competency_scores: competency_scores}
  /   .page-break
  / - else
  /   = render :partial => "assessment_reports/competency_report/pdf/competency_score_overview", :locals => { competency_scores: competency_scores}
  /   .page-break
  
  / - (0..competency_scores.length-1).step(competency_step) do |step|
  /   - step_competency_scores = Hash[competency_scores[step..(step+(competency_step - 1))]]
  /   = render :template => "assessment_reports/competency_report/pdf/competency_report_page2", :locals => { competency_scores: step_competency_scores }

    .page-break
  .page-break
