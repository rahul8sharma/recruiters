- if @report.report_hash[:guidelines_for_user_manager].present?
  - guides_step = Rails.application.config.reports[@view_mode]["guides_step"]
  - user_manager_guidelines = @report.report_hash[:guidelines_for_user_manager]
  - ordered_guides = user_manager_guidelines.select{|factor_name, guide| !guide[:pass] && (guide[:factor_type] == "Suitability::Factor" || guide[:factor_type] == "Suitability::AlarmFactor") }.map{|factor,guide| [factor,guide] }
  - ordered_guides += user_manager_guidelines.select{|factor_name, guide| guide[:pass] && (guide[:factor_type] == "Suitability::Factor" || guide[:factor_type] == "Suitability::AlarmFactor") }.map{|factor,guide| [factor,guide] }
  - (0..ordered_guides.length-1).step(guides_step) do |step|
    - step_user_manager_guidelines = Hash[ordered_guides[step..(step+(guides_step - 1))]]     
    .inner
      .scores.interview_guide
        .divider1
        .blue_heading.large-text.pull-left
          Guidelines for Assessment Taker&#39;s Manager
        .instruction_container.pull-right
          .instructions
            .instruction1.pull-left
              Favorable Traits
            .instruction2.less_favorable.pull-left
              Less Favorable Traits
            .clr
        .clr
        .divider1
        %ul.clearfix.interview_guide_listing
          - step_user_manager_guidelines.each do |factor_name, guide|
            %li
              .divider1
              - klass = guide[:factor_type] == "Suitability::DirectPredictor" ? 'mid_favorable' : (guide[:pass]? 'favorable' : 'less_favorable')
              .que-no.hexagon-icon{ class: klass }
              .factor-name.pull-left
                = factor_name
              .description.pull-left
                = guide[:body]
              .clr
              .divider1
    .page-break              
