- if @report.report_hash[:factor_scores].present?
  - scores_step = Rails.application.config.reports[@view_mode]["scores_step"]
  - factor_scores = @report.report_hash[:factor_scores]
  - (0..factor_scores.keys.length-1).step(scores_step) do |step|  
    - step_factor_scores = factor_scores.slice(*factor_scores.keys[step..(step+(scores_step - 1))])
    #scores.section_end_line
      .container
        .divider2
        .title
          Scores of Traits measured in this Assessment
        .divider1
        .instruction_container.pull-left
          .instructions
            .box.pull-left
              .box-icon.pull-left
              .box-title.pull-left Expected Score Range
              .clr
            .instruction1.pull-left
              Favorable Traits
            .instruction2.less_favorable.pull-left
              Less Favorable Traits
            .clr
        .scale.span12.right
          - range_offset = 100 / (@company_norm_buckets.size * 2) 
          - range_width = 100 - (100/@company_norm_buckets.size) 
          - line_width = 100 - (100/(@company_norm_buckets.size - 1)) 
          - marker_width = 100 / @company_norm_buckets.size 
          - range_right_offset = marker_width / 2 
          .scale_inner{ style: "margin-right: #{ -range_right_offset }%" }

            .line{ style: "left: #{ range_offset }%; width: #{line_width }%" }
            .marker_container
              - @company_norm_buckets.each do |norm_bucket|
                .marker{ style: "width: #{ marker_width }%" }
                  %span
                    - if norm_bucket.name.split(" ").size == 1
                      %br/
                    = norm_bucket.name.split(" ").join("<br/>").html_safe
                  .arrow_box
                    .arrow
                .marker_info{ style: "left: #{ range_offset / 2 }%; width: #{ line_width }%" }
                  = norm_bucket.description
              .clr
        .clr
        .divider4
        %ul.clearfix.scores_listing.first
          - step_factor_scores.each_with_index do |(factor_name,factor_score),index|
            - factor_score_consistency_hash = HashWithIndifferentAccess.new({ factor_score: factor_score })
            %li{:id => "#{factor_name}"}
              .lhs-sec.pull-left
                %div{ class: "span1 first hexagon-icon #{factor_score[:pass] ? 'favorable' : 'less_favorable'}" }
                .factor-name.pull-left
                  = factor_name
                  .info
                    = factor_score[:factor_definition]
                  .arrow
              .score_slider.span12.pull-right
                - expected_score_block_width = 100 / (@company_norm_buckets.size - 1)
                - scale_values = get_scale_calculations(expected_score_block_width, factor_score, @company_norm_buckets, 0)
                - if scale_values[:to_norm_bucket_name] == @company_norm_buckets.last.name && scale_values[:width] == 34
                  - scale_values[:offset] = scale_values[:offset] - 34
                .score_slider_inner{style:"margin-right: #{-range_right_offset}%;"}
                  .progress_container{style: "left: #{range_offset}%; width: #{line_width}%;"}
                    .expected_score_progress{style:"width: #{scale_values[:width]}%; margin-left: #{scale_values[:offset]}%"}
                  .marker_container
                    .marker{ class: "#{factor_score[:pass] ? 'favorable' : 'less_favorable'}", style: "left: #{scale_values[:position]}%; width: #{marker_width}%" }
                      .score_indicater_container
                        .score_indicater
                          = scale_values[:company_norm_bucket_name]
                    .clr
                .clr
              .clr
              .divider1
              .factor-description
                = factor_score[:description]           
.clr