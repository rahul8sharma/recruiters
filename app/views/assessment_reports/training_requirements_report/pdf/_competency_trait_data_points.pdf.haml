- @report_data[:competency_scores].each do |competency, competency_data|
  - competency_data[:factor_scores].each_slice(3) do |step_scores|
    = render :partial => "assessment_reports/training_requirements_report/pdf/header"
    .divider1
    .data_points.competency_report
      .scores
        .title.extra-large-text
          Data Points: Traits under Competencies
        .divider1
        .instruction_container
          .instructions
            .instruction1.pull-left
              Favorable Scores
            .instruction2.less_favorable.pull-left
              Less Favorable Scores        
            .clr
          .frame
            .heading.pull-left
              = competency
            .heading.pull-right
              = competency_data[:avg_score][:bucket]
            .clr
            .divider1
            %ul
            - step_scores.each_with_index do |(factor_name, factor_data),index|
              %li
                .padding-all1
                  .black
                    = factor_name
                  .divider1
                  .left.span11.first
                    .divider1
                    .flow-chart
                      .parent-node
                        .final-score
                          .pie-chart{ id: "pie_competency_#{index}", "data-percentage-candidates" => factor_data[:percentage_candidates] }
                          .min-score
                            = "#{100 - factor_data[:percentage_candidates]}%"
                          .max-score
                            = "#{factor_data[:percentage_candidates]}%"
                      - if factor_data[:acceptable_range]
                        - from_weight = factor_data[:acceptable_range][:from_norm_bucket][:weight]
                        - to_weight = factor_data[:acceptable_range][:to_norm_bucket][:weight]
                        - diff = to_weight - from_weight
                        - width = diff * 77
                        - left = (from_weight-1) * 77
                        .line{ style: "left: #{left}px;width: #{width}px;" }
                        .range{ style: "left: #{left}px;width: #{width}px;" }
                          .text
                            .text-inner Expected Score Range
                      
                      - @norm_buckets.each_with_index do |norm_bucket, index|
                        - small = index == 2 || index == 3
                        - if factor_data[:acceptable_range]
                          - min_score = (norm_bucket.weight < from_weight || norm_bucket.weight > to_weight) ? 'min-score' : ''
                        - else
                          - min_score = 'gray'  
                        .child-node{ :class => "#{min_score} #{index < (@norm_buckets.size/2) ? 'left-node' : 'right-node'} #{small ? 'small' : ''}"}
                          .score
                            #{factor_data[:bucket_wise_percentages][norm_bucket.name] || 0}%
                          .bucket-name
                            = norm_bucket.name
                      .clr
                      .divider5
                      .small-text.black  
                        Percentage of Assessment Takers across scores
                  .right.span7
                    .divider1
                    .text-center.black
                      Across all Assessment Takers
                    .divider1
                    .span
                      .pannel.span6.margin-auto
                        .score_snippet.max
                          Maximum Score: #{factor_data[:max_score][:bucket]}
                        .score_snippet.min
                          Minimum Score: #{factor_data[:min_score][:bucket]}
                        .score_snippet.average
                          Average Score: #{factor_data[:avg_score][:bucket]}
                    .clr
                  .clr
                - if @report.tips_in_traits
                  .tip
                    = factor_data[:tip] || "-"
              .clr
    .page-break
  .page-break