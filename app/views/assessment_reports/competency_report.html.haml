- if @view_mode == "html"
  :css
    .competency_report .inner{margin-top:0px;} 
    
.competency_report
  - competency_step = Rails.application.config.reports[@view_mode]["competency_step"]
  - total = @report.report_hash[:competency_scores].keys.size
  - page1_keys = @report.report_hash[:competency_scores].keys[0..(competency_step-1)]
  - rest_keys = @report.report_hash[:competency_scores].keys[competency_step..(total-1)].to_a
  - page1_competency_scores = @report.report_hash[:competency_scores].select{|key,value| page1_keys.include?(key) }
  - rest_competency_scores = @report.report_hash[:competency_scores].select{|key,value| rest_keys.include?(key) }.map{|key,value| [key,value] }
  = render :template => "assessment_reports/competency_report_page1", :locals => { competency_scores: page1_competency_scores }
  .page-break 
  - (0..rest_competency_scores.length-1).step(competency_step) do |step|    
    - step_competency_scores = Hash[rest_competency_scores[step..(step+(competency_step - 1))]]
    = render :template => "assessment_reports/competency_report_page2", :locals => { competency_scores: step_competency_scores }
    .page-break
  .page-break 
  - if @view_mode == "html"
    = render :template => "assessment_reports/competency_report_page3"
  - else
    - @report.report_hash[:competency_scores].each do |competency_name, competency_data|
      - if competency_data[:factor_scores].present?
        = render :template => "assessment_reports/competency_report_page3", :locals => { competency_name: competency_name, competency_data: competency_data }
        .page-break 
      
.report      
  = render :template => "assessment_reports/common_pages"      
