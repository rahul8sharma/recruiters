- competency_scores = @report.report_hash[:competency_scores].map{|key,value| [key,value] }
- competency_step = Rails.application.config.reports[@view_mode]["competency_step"]

- (0..competency_scores.length-1).step(competency_step) do |step|    
  - step_competency_scores = Hash[competency_scores[step..(step+(competency_step - 1))]]
  - step_competency_scores_hash = HashWithIndifferentAccess.new({ step_competency_scores: step_competency_scores })
  #traits.section_end_line
    .divider2
    .scores.container
      .title
        Competencies / Values Measured
      .divider2
      .instruction_container
        .instructions
          .instruction1.pull-left
            Favorable
          .instruction2.less_favorable.pull-left
            Less Favorable
          .clr
      .divider2
      - section_value.each do |section|
        - locals = Hash[section["locals"].map { |key, value| [key.to_sym, step_competency_scores_hash[key.to_sym]] }]
        = render :partial => section["path"], :locals => locals
    .divider1