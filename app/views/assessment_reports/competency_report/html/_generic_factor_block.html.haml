- step_competency_scores.each do |competency_name, competency_data|
  / - company_norm_bucket = @company_norm_buckets.detect{|bucket| bucket.norm_bucket_ids.include?(competency_data[:grade_uid])}
  .competency-container.frame
    .heading.pull-left{ title: competency_name }
      = competency_name.to_s[0..50]
    .heading.pull-right
      - company_norm_bucket = @company_norm_buckets.detect{|company_norm_bucket| company_norm_bucket.norm_bucket_ids.include?(competency_data[:grade_uid]) }
      = company_norm_bucket ? company_norm_bucket.name : competency_data[:grade]
    .clr
    .factors_container
      .factors_list  
        - competency_data[:factor_scores].each_with_index do |(factor_name,factor_score), index|
          - scale_values = get_scale_calculations(factor_score, @company_norm_buckets, 10)
          - factor_name_link = factor_name
          - margin = centralAlignTraitNames(factor_name, "html")
          %div{:class=>"factor_#{index+1}"}
            .text-wrap{:style=>"margin-top: #{margin}px;"}
              %a{:href => "#"+"#{competency_name}#{factor_name_link}", :class => "#{scale_values[:genericKlass]}" }
                = factor_name.gsub(" ","<br/>").html_safe
        -#use ".less_favorable" or ".favorable" to change the color of text and ".underlined" for underlined Text.
  .divider1  
