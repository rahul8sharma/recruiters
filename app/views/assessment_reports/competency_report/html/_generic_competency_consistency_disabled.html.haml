- @report.report_hash[:competency_scores].each do |competency_name, competency_data|
  - if competency_data[:factor_scores].present?
    - company_norm_bucket = @company_norm_buckets.detect{|bucket| bucket.norm_bucket_ids.include?(competency_data[:grade_uid])}
    .frame
      .heading.pull-left
        #{competency_name}
      .heading.pull-right 
        = company_norm_bucket ? company_norm_bucket.name : competency_data[:grade]
      .clr 
      %ul.clearfix.scores_listing.first
        - competency_data[:factor_scores].each do |factor_name, factor_score|
          - scale_values = get_scale_calculations(factor_score, @company_norm_buckets, 0)
          %li{:id => "#{competency_name}#{factor_name}"}
            .lhs-sec.pull-left
              %div{ class: "span1 first hexagon-icon #{scale_values[:genericKlass]}" }
              
              .factor-name.pull-left{ class: "#{factor_score[:type] == 'Functional::Trait' ? 'star':''}" }
                = factor_name 
                .info
                  = factor_score[:factor_definition]
                .arrow
              .clr
            .score_slider.span12.pull-right
              .score_slider_inner
                .progress_container{style: "left: #{scale_values[:scale_offset]}%; width: #{scale_values[:scale_width]}%;"}
                  .expected_score_progress{style:"width: #{scale_values[:range_width]}%; margin-left: #{scale_values[:range_offset]}%"}
                .marker_container
                  .marker{ class: "#{factor_score[:pass] ? 'favorable' : 'less_favorable'}", style: "left: #{scale_values[:marker_position]}%; width: #{scale_values[:marker_width]}%" }
                    .score_indicater_container
                      .score_indicater
                        = scale_values[:company_norm_bucket_name]
                  .clr
              .clr
            .clr
            .divider1
            .factor-description
              = factor_score[:description]
    .divider1
