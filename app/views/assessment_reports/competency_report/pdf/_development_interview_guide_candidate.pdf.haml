- guides_step = Rails.application.config.reports[@view_mode]["guides_step"]
- if @report.report_hash[:development_guide].present?
  - development_guide = @report.report_hash[:development_guide]
  - ordered_guides = development_guide.select{|factor_name, guide| !guide[:pass] && (guide[:factor_type] == "Suitability::Factor" || guide[:factor_type] == "Suitability::AlarmFactor") }.map{|factor,guide| [factor,guide] }
  - ordered_guides += development_guide.select{|factor_name, guide| guide[:pass] && (guide[:factor_type] == "Suitability::Factor" || guide[:factor_type] == "Suitability::AlarmFactor") }.map{|factor,guide| [factor,guide] }
  - if @report.report_hash[:candidate_stage].to_sym == :candidate
    - ordered_guides += development_guide.select{|factor_name, guide| guide[:pass] && guide[:factor_type] == "Suitability::DirectPredictor"}.map{|factor,guide| [factor,guide] }
  - (0..ordered_guides.length-1).step(guides_step) do |step|    
    - step_post_assessment_guidelines = Hash[ordered_guides[step..(step+(guides_step - 1))]]
    .inner
      .scores.interview_guide
        .divider1
        - if step == 0
          %h1.font-normal.blue_heading.large-text.pull-left
            Development Guide for the Assessment Taker
        -else
          .blue_heading.large-text.pull-left
            Development Guide for the Assessment Taker
        .instruction_container.pull-right
          .instructions
            .instruction1.pull-left
              Favorable Traits
            .instruction2.less_favorable.pull-left
              Less Favorable Traits
            .clr
        .clr
        %ul.clearfix.interview_guide_listing
          - step_post_assessment_guidelines.each do |factor_name, guide|
            - factor_score = @factor_scores[factor_name]
            - from_norm_bucket = @company_norm_buckets.detect{|company_norm_bucket| company_norm_bucket.norm_bucket_ids.include? factor_score[:scale][:from_norm_bucket_uid] }
            - to_norm_bucket = @company_norm_buckets.detect{|company_norm_bucket| company_norm_bucket.norm_bucket_ids.include? factor_score[:scale][:to_norm_bucket_uid] }
            - norm_bucket_uid = factor_score[:norm_bucket_uid]
            - company_norm_bucket = @company_norm_buckets.detect{|company_norm_bucket| company_norm_bucket.norm_bucket_ids.include?(norm_bucket_uid)}
            - scored_weight = company_norm_bucket.weight
            - klass = (scored_weight <= to_norm_bucket.weight && scored_weight >= from_norm_bucket.weight) ? "favorable" : "less_favorable" 
            %li
              .divider1
              .que-no.hexagon-icon{ class: klass }
              .factor-name.pull-left
                = factor_name
              .description.pull-left
                = guide[:body]
              .clr
              .divider1
    .page-break
