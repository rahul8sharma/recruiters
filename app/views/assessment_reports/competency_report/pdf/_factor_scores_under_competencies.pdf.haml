- step_toc = 0
- trait_scores = get_factors_under_competencies(@report)
- trait_scores.each_slice(7) do |step_data|
  = render "shared/reports/pdf/report_header"
  .container
    .scores.favorable_factors
      .divider1
      .span12.first.pull-left
        - if step_toc == 0
          - step_toc += 1
          %h1.page_title
            Scores of Factors measured under different Competencies / Values
          .divider1
        - else
          .page_title
            Scores of Factors measured under different Competencies / Values
          .divider1
        .instruction_container
          .instructions
            .box.pull-left
              .box-icon.pull-left
              .box-title.pull-left
                Expected Score &nbsp;
              .clr          
            .instruction1.pull-left.first
              Favorable
            .instruction2.less_favorable.pull-left
              %u
                Less Favorable
            .clr
        - if (@report.report_hash[:functional_items].present?)
          .functional-traits-title
            Functional Traits (Trait Score is #{@report.report_data[:include_functional_traits_in_aggregate_scores] ? "included in":"excluded from"} competency scores)
      .pull-right
        .divider2
        .scale.span8
          - scale_values = get_scale_and_marker_width(@company_norm_buckets)
          .scale_inner
            .line{ style: "left: #{ scale_values[:scale_offset] }%; width: #{scale_values[:scale_width]}%" }
            .marker_container
              - @company_norm_buckets.each do |norm_bucket|
                .marker{ style: "width: #{scale_values[:marker_width]}%" }
                  %span
                    - if norm_bucket.name.split(" ").size == 1
                      %br/
                    = norm_bucket.name
              .clr
        .clr
        .divider1

      .clr
      - section_value.each do |section|
        = render :partial => section["path"], :locals => {:step_data => step_data}
  .page-break
