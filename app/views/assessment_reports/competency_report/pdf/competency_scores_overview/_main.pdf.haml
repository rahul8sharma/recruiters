- competency_scores = @report.report_hash[:competency_scores].map{|key,value| [key,value] }
= render "shared/reports/pdf/report_header"
.divider1
.overview
  .container
    .divider2
    .content.overview_scale
      .overview-title.text-left
        .pull-left
          %h1.font-normal.color-warning.medium-text
            Overview of Competencies / Values Measured
          .instruction_container
            .instructions
              .box.pull-left
                .box-icon.pull-left
                .box-title.pull-left 
                  Expected Score
                .clr
              .instruction1.pull-left
                Favorable
              .instruction2.less_favorable.pull-left
                Less Favorable
              .clr
        .scale.span8.pull-right
          - scale_values = get_scale_and_marker_width(@company_norm_buckets)
          .scale_inner
            .line{ style: "left: #{ scale_values[:scale_offset] }%; width: #{scale_values[:scale_width]}%" }
            .marker_container
              - @company_norm_buckets.each do |norm_bucket|
                .marker{ style: "width: #{scale_values[:marker_width]}%" }
                  %span
                    - if norm_bucket.name.split(" ").size == 1
                      %br/
                    = norm_bucket.name
              .clr
        .clr
      - locals_hash = { competency_scores: competency_scores }
      - section_value.each do |section|
        - locals = Hash[section["locals"].map { |key, value| [key.to_sym, locals_hash[key.to_sym]] }]
        - locals[:section_value] = section["children"]
        = render :partial => section["path"], :locals => locals
    .divider2
