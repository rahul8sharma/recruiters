- if @report.report_hash[:objective_items].present?
  - step_toc_objective = 0
  - objective_items = Hash[@report.report_data[:objective_items].sort_by{|item_id, item_data| item_data[:section] }]
  - objective_items.each_slice(2) do |objective_items|
    .functional-questions.objective
      - if step_toc_objective == 0
        - step_toc_objective += 1
        %h1.font-normal.title.huge-text.default
          Functional Questions
      - else
        .font-normal.title.huge-text.default
          Functional Questions
      
      .title.pull-left
        - section = Hash[objective_items].values.first[:section]
        - all_responses = @report.report_data[:objective_items].values.flatten.select{|item| item[:section] == section }
        - correct_responses = all_responses.select{|option| option[:response][:score] > 0 }
        = section.present? ? "Section &#147;#{section}&#148; :".html_safe : ""
        Objective Questions 
      .correct-responses.span6.pull-right.first
        Correct Responses: #{((correct_responses.size*100).to_f/all_responses.size).round(2)}%
      .clr
      .divider1

      .instruction-box
        .user.span7
          %i.icon-edit
          Options selected by #{@report.report_data[:user][:name].to_s[0..15]}
        .correct.span6
          %i.icon-ok-circle
          Green indicates correct response
        .incorrect.span6
          %i.icon-remove-circle
          Red indicates incorrect response
        .clr
      .divider1
      .clr

      - objective_items.each do |item_id, item_data|
        .frame
          .label.label-warning.pull-left.left-offset1
            Question
          .span14
            .question
              = item_data[:item][:body].html_safe
            .divider1
          .responses-result{ class: (item_data[:response][:score] == 1 ? 'correct' : 'incorrect') }
          .clr
          .divider1
          .label.label-warning.pull-left.left-offset1
            Options and response
          .clr
          .divider1
          %ul.options-response
            - item_data[:options].each do |option_id,option_data|
              - cklass = (option_data[:score] == 1) ? 'correct' : ''
              - iklass = option_id.to_i == item_data[:response][:id].to_i ? 'incorrect' : ''
              - iconstyle = option_id.to_i == item_data[:response][:id].to_i ? '' : 'visibility:hidden'
              %li{ class: "#{iklass} #{cklass}" }
                %i.icon-edit{:style => "#{iconstyle}"}
                = option_data[:body]
          - if item_data[:trait].present?
            .attachment-info
              This question is attached to the trait “#{item_data[:trait]}”
        .divider1
    .divider1
    .page-break
