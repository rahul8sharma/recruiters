- content_for :jquery do
  = javascript_include_tag "jquery"
  = javascript_include_tag "jquery_ujs"

.customize.edit
  = form_for(:assessment_group, url: company_assessment_group_path(@company, @assessment_group), method: :put) do |f|
    .inn.first
      .page-title.pull-left
        = @assessment_group.title
    .inn.gray-gradient
      .clr
      .divider1
      .expire-container
        .expire.pull-left
          %b.show.line-height2.medium-text.pull-left
            Expire page on: 
          = f.datetime_select :expires_on  
          -#  
            .left-offset1.pull-left
              %select
                %option
                  Hour
                %option
                  2
              %select
                %option
                  Mins
                %option
                  2
            .left-offset1.pull-left
              %select
                %option
                  Date
                %option
                  1
              %select.big
                %option
                  Month
                %option
                  2
              %select
                %option
                  Year
                %option
                  2
          .clr
        %a.expire-btn.btn.medium-text.link-color.pull-right{:href => expire_company_assessment_group_path(@company, @assessment_group), :title => "Expire Page Now"}
          Expire Page Now
        .clr 
      
      .divider1
      .text-right
        %a.medium-text{:href => company_assessment_group_path(@company, @assessment_group), :title => "Cancel"}
          Cancel
        %input.btn.btn-info.medium-text.left-offset1{:type => "Submit", :title => "Update", :name => "Update", value: "Update"}
      .list
        %ul.unstyled.clearfix
          %li.titles
            .control-group
              .left-sec
                %b Included
              .right-sec
                %b Selected Tests
              .clr  
          - @assessments.each do |assessment|
            %li
              -# add class ".checked" to "<label>" when user clicks on checkbox/label
              .control-group
                .left-sec
                  %input{:type => "hidden", id: "enable_assessment_#{assessment.id}", name: "assessment_group[assessment_hash][#{assessment.id}][enabled]", value: @assessment_group.assessment_hash["#{assessment.id}"]['enabled']}
                  %input{:type => "checkbox", :class => "assessment_checkbox", toggle_element: "#label_assessment_#{assessment.id}", id: "chk_assessment_#{assessment.id}", checked: @assessment_group.assessment_hash["#{assessment.id}"]['enabled'] == "true", assessment_id: assessment.id}
                .right-sec
                  %label.checked{ for: "chk_assessment_#{assessment.id}", id: "label_assessment_#{assessment.id}" }
                    = assessment.name
                .clr
              .control-group
                .left-sec.line-height2
                  Optional:
                .right-sec
                  %input{:type => "text", :placeholder => "Enter Display Name for the Test. This name will be displayed on the Index Page. If left blank, existing test title will be displayed on the Index Page.", name: "assessment_group[assessment_hash][#{assessment.id}][display_text]", value: @assessment_group.assessment_hash["#{assessment.id}"]['display_text']}

                .clr
        .text-right
          %a.medium-text{:href => company_assessment_group_path(@company, @assessment_group), :title => "Cancel"}
            Cancel
          %input.btn.btn-info.medium-text.left-offset1{:type => "Submit", :title => "Update", :name => "Update", value: "Update"}
        .clr

= javascript_include_tag "walk_ins"        
