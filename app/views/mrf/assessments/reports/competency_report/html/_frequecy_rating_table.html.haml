- if role_wise_scores.present?
  .big-text
    Frequency of Ratings
  .divider2
  %table.frequecy_rating_table{:cellpadding=>"0", :cellspacing=> "0", width: "100%"}
    %tbody
      %tr.captions
        %td.mute_bg
        %td.dark_mute_bg{:colspan=>"#{graph_buckets.size}"}
          Rating #{trait_wise ? "":"Between"}
    
      %tr.captions.rating_ranges
        %td.mute_bg
        - graph_buckets.each do |bucket|
          %td
            - if trait_wise
              #{bucket.name} 
            - else
              #{bucket.min_val} to #{bucket.max_val}

      - role_wise_scores.each do |role, score|
        - max_score = score[:bucket_wise_percentages].values.map{|x| x[:count] }.max
        %tr
          %td.green_bg.captions
            = role.titleize
          - graph_buckets.each do |bucket|
            - bucket_score = score[:bucket_wise_percentages][bucket.name][:count]
            %td.rating_score{ class: max_score == bucket_score ? "max_value":"" }
              = bucket_score
              -#add class ".max_value" to ".rating_score" if td have maximum value of that row
      %tr.overall
        %td.orange_bg.captions
          Overall
        - max_score = graph_buckets.map{|bucket| role_wise_scores.collect{|role,score| score[:bucket_wise_percentages][bucket.name][:count] }.sum }.max
        - graph_buckets.each do |bucket|
          - total = role_wise_scores.collect{|role,score| score[:bucket_wise_percentages][bucket.name][:count] }.sum
          %td.rating_score{ class: max_score == total ? "max_value" : "" }
            = total
