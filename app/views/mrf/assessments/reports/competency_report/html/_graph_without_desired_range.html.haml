.graph
  .graph_content
    - @report.report_data[:competency_scores].each do |competency,competency_scores|
      - self_score = competency_scores[:average_score_self][:points]
      - other_score = competency_scores[:score][:points]
      - min = @competency_graph_buckets.map(&:min_val).min
      - max = @competency_graph_buckets.map(&:min_val).max
      - step =  (100.0/(@norm_buckets.size-1))
      - if self_score && other_score
        - min_score = [self_score,other_score].min
        - width = (convertToRange(min,max,0,100,other_score) - convertToRange(min,max,0,100,self_score)).abs
        - margin = convertToRange(min,max,0,100,min_score)
        .divider2
        .graph_bar{ class: (self_score == other_score ? "equal_rating" : ""), style: "margin-left:#{margin}%;width:#{width}%" }
          - if self_score == other_score
            .overlapped_score_icon
          - else
            -# add class ".equal_rating" to ".graph_bar.equal_rating" if score is equal
            .graph_self_rating{ style: "#{min_score == self_score ? 'left:-19px;right:auto' : 'right:-19px;left:auto'}" }
            .graph_stakeholder_rating{ style: "#{min_score == other_score ? 'left:-19px;right:auto;' : 'right:-19px;left:auto'}" }
        .divider1
      - elsif(self_score || other_score)
        - min_score = (self_score || other_score)
        - width = 0
        - margin = convertToRange(min,max,0,100,min_score)
        .divider2
        .graph_bar{ class: (self_score == other_score ? "equal_rating" : ""), style: "margin-left:#{margin}%;width:#{width}%" }
          -# add class ".equal_rating" to ".graph_bar.equal_rating" if score is equal
          - if self_score
            .graph_self_rating{ style: "#{min_score == self_score ? 'left:-19px;right:auto' : 'right:-19px;left:auto'}" }
          - else  
            .graph_stakeholder_rating{ style: "#{min_score == other_score ? 'left:-19px;right:auto;' : 'right:-19px;left:auto'}" }
        .divider1
    .divider1
.clr