.classic_report
  .scores_competencies_graph.descending_order.descending_average_rating.border-bottom-grayLighter
    .traits_under_graph
      .divider2
      .extra-large-text
        Average rating given by Stakeholders
      .clr
      .divider1
      .graph_container
        .left_sec.pull-left
          .divider2
          %ul
            - trait_score[:role_wise_scores].each do |role, scores|
              - if scores[:points].present?
                %li
                  .span5.big-text.first.trait_title
                    = role.pluralize.titleize
                    
                  .stakeholder_rating.medium-text.pull-left
                    = scores[:points]
                  .clr

        .right_sec.span22.pull-right
          .classic_competency_graph
            .classic_competency_graph_scale
              .block.pull-left
                = @trait_graph_buckets.first.min_val
              - @trait_graph_buckets[1..@trait_graph_buckets.length-1].each do |trait_graph_bucket|
                .block.pull-left{:style=>"width: #{870/(@trait_graph_buckets.size-1)}px; text-align: right"}
                  = trait_graph_bucket.min_val

              .clr
            .graph
              .graph_content
                - old_min = @trait_graph_buckets.first.min_val
                - old_max = @trait_graph_buckets.last.max_val
                - trait_score[:role_wise_scores].each do |role, scores|
                  - if scores[:points].present?
                    - percent = convertToRange(old_min, old_max, 0, 100, scores[:points].to_f)
                    - percent = percent == 0 ? 2 : percent
                    .divider1
                    .descending_graph_bar.max{:style => "width: #{percent}%"}
                  
                    .divider1
        .clr
.divider2 
