- if role_wise_scores.present?
  .divider1
  .extra-medium-text
    Frequency of Ratings
  .divider1
  %table.frequency_rating_table{:cellpadding=>"0", :cellspacing=> "0", width: "100%"}
    %tbody
      %tr.captions
        %td.dark_mute_bg{:rowspan=>"2"}
          Stakeholder(s)
        %td.dark_mute_bg{:rowspan=>"2"}
          Average rating given 
          %br/
          by Stakeholders
        %td.dark_mute_bg{:rowspan=>"2"}
          No. of 
          %br/
          Respondents
        %td.dark_mute_bg{:colspan=>"#{graph_buckets.size}"}
          Rating
      %tr.captions.rating_ranges
        - graph_buckets.each do |bucket|
          %td
            #{bucket.name}
        
      - stakeholder_count = 0
      - overall_points = 0
      - role_wise_scores.each do |role, score|
        - max_score = score[:bucket_wise_percentages].values.map{|x| x[:count] }.max
        - stakeholder_count += score[:count].to_i
        - overall_points += score[:points].to_f
        %tr
          %td.green_bg.captions
            = role.titleize
          %td.rating_score.average_rating
            = score[:points]
          %td.rating_score.average_rating
            = score[:count]
          - graph_buckets.each do |bucket|
            - bucket_score = score[:bucket_wise_percentages][bucket.name][:count]
            %td.rating_score{ class: max_score == bucket_score ? "max_value":"" }
              = bucket_score
              -#add class ".max_value" to ".rating_score" if td have maximum value of that row
          
      %tr.overall
        %td.orange_bg.captions
          Overall
        %td.orange_bg.captions
          = (overall_points / stakeholder_count).round(2)
        %td.orange_bg.captions
          = stakeholder_count
        - max_score = graph_buckets.map{|bucket| role_wise_scores.collect{|role,score| score[:bucket_wise_percentages][bucket.name][:count] }.sum }.max
        - graph_buckets.each do |bucket|
          - total = role_wise_scores.collect{|role,score| score[:bucket_wise_percentages][bucket.name][:count] }.sum
          %td.rating_score{ class: max_score == total ? "max_value" : "" }
            = total
  .divider1
-#       
  .medium-text.black.span.bold
    Frequency of Ratings
  .clr
  .left-offset1
    %table.frequency_rating_table{:cellpadding=>"0", :cellspacing=> "0", width: "100%"}
      %tbody
        %tr.captions
          %td.mute_bg.medium-text{:colspan=>"8"}
            Ratings Between
        %tr.captions.rating_ranges
          %td
          - graph_buckets.each do |bucket|
            %td
              = bucket.name
          %td
            No. of Respondents
        - stakeholder_count = 0
        - role_wise_scores.each do |role, score|
          - max_score = score[:bucket_wise_percentages].values.map{|x| x[:count] }.max
          - stakeholder_count += score[:count].to_i
          %tr{:style=>"background:none"}
            %td.color-average.captions{:style=>"text-align:left"}
              = role.titleize
            - graph_buckets.each do |bucket|
              - bucket_score = score[:bucket_wise_percentages][bucket.name][:count]
              %td.color-stakeholder{ class: max_score == bucket_score ? "max_value":"" }
                = bucket_score
                -#add class ".max_value" to ".rating_score" if td have maximum value of that row
            %td.color-stakeholder
              = score[:count]
        %tr{:style=>"background:none"}
          %td.captions.bold.color-average{:style=>"text-align:left"}
            Total
          - max_score = graph_buckets.map{|bucket| role_wise_scores.collect{|role,score| score[:bucket_wise_percentages][bucket.name][:count] }.sum }.max
          - graph_buckets.each do |bucket|
            - total = role_wise_scores.collect{|role,score| score[:bucket_wise_percentages][bucket.name][:count] }.sum
            %td.color-stakeholder{ class: max_score == total ? "max_value" : "" }
              = total
          %td.captions.bold.color-average
            = stakeholder_count
      .divider1
