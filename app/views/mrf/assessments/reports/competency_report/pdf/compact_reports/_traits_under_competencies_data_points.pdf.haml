- roles = @report.report_data[:competency_scores].first[1][:role_wise_scores].keys
- role_limit = 5
- @report.report_data[:competency_scores].each do |competency, competency_scores|
  - competency_scores[:trait_scores].each do |trait_score|
    = render partial: "shared/360/compact_mrf_report_header.pdf.haml" , :locals => { :display_text => "Details on 360 Degree Ratings on Traits (Under Competencies / Values)"}
    - value_hash = HashWithIndifferentAccess.new({trait_score: trait_score, competency: competency})
    .scores.border-bottom-grayLighter.mrf_data_points
      .color-info.big-text
        Details on 360&#176 Ratings on Traits (Under Competencies / Values)
      .divider1
      .frame
        .heading.pull-left
          #{competency}
        .clr
        .padding-all1
          .medium-text.pull-left{:style=>"padding-top: 10px"}
            - section_value.each do |section|
              - locals = Hash[section["locals"].map { |key, value| [key.to_sym, value_hash[key.to_sym]] }]
              = render :partial => section["path"], :locals => locals

          .final_data_points.pull-left.small
            .high_low_scores{:style => "padding: 10px"}
              .heading.span
                360&#176; Rating : #{trait_score[:average_score_excluding_self][:points]}
              .border_gray_light.span
                .high.left.pull-left
                  Highest
                .right.pull-left
                  #{@assessment.report_data[:trait_scores][trait_score[:trait][:name]][:max_score][:score]}
                .clr
              .border_gray_light.span
                .low.left.pull-left
                  Lowest
                .right.pull-left
                  #{@assessment.report_data[:trait_scores][trait_score[:trait][:name]][:min_score][:score]}
                .clr
              .clr
          .clr

          .divider1


        .padding-all1
          .border-bottom-grayLighte
            .extra-medium-text
              Average rating given by Stakeholders
            %p.medium-text.gray-darker
              Average ratings given by each stakeholder category for this trait (parameter) are graphically shown in the section.
            .scores_competencies_graph.descending_order.border-bottom-grayLighter
              .traits_under_graph
                .graph_container
                  .left_sec.pull-left
                    .graph_instructions{:style=>"margin-left: 137px"}
                      .span1.divider2.graph_stakeholder_rating_icon
                      .clr
                    %ul
                      - trait_score[:role_wise_scores].each do |role, scores|
                        - if scores[:points].present?
                          %li
                            .trait_title.first.span4
                              = role.pluralize.titleize
                            .stakeholder_rating.pull-left
                              = scores[:points] || "-"
                            .clr
                        
                  .right_sec.span13.pull-right
                    .classic_competency_graph
                      .classic_competency_graph_scale
                        .block.pull-left
                          = @trait_graph_buckets.first.min_val
                        - @trait_graph_buckets[1..@trait_graph_buckets.length-1].each do |trait_graph_bucket|
                          .block.pull-left{:style=>"width: #{510/(@trait_graph_buckets.size-1)}px; text-align: right"}
                            = trait_graph_bucket.min_val

                        .clr
                      .graph
                        .graph_content
                          - old_min = @trait_graph_buckets.first.min_val
                          - old_max = @trait_graph_buckets.last.max_val
                          - trait_score[:role_wise_scores].each do |role, scores|
                            - if scores[:points].present?
                              - percent = convertToRange(old_min, old_max, 0, 100, scores[:points].to_f)
                              - percent = percent == 0 ? 2 : percent
                              .divider1
                              .descending_graph_bar.max{:style => "width: #{percent}%;background: #a119a6"}
                              .divider1
                  .clr
              .divider1
    
        - if roles.size < role_limit
          .padding-all1
            .border-bottom-greyLighte
              = render :partial => "mrf/assessments/reports/competency_report/pdf/compact_reports/frequency_rating_table_trait", locals: { role_wise_scores: trait_score[:role_wise_scores], trait_wise: true, graph_buckets: @trait_graph_buckets, trait_score: trait_score }
              .clr
          .divider1
    .page-break

    - if roles.size >= role_limit
      = render partial: "shared/360/compact_mrf_report_header.pdf.haml" , :locals => { :display_text => "Data Points on Scores: Traits Under Competencies"}
      .scores.border-bottom-grayLighter.mrf_data_points
        .color-info.big-text
          Details on 360&#176 Ratings on Traits (Under Competencies / Values)
        .divider1
        .frame
          .heading.pull-left
            #{competency}
          .heading.pull-right
            360&#176 Rating : #{trait_score[:average_score_excluding_self][:points]}
          .clr
          .padding-all1
            .border-bottom-greyLighte
              = render :partial => "mrf/assessments/reports/competency_report/pdf/compact_reports/frequency_rating_table", locals: { role_wise_scores: trait_score[:role_wise_scores], trait_wise: true, graph_buckets: @trait_graph_buckets }
              .clr
          .divider1
      .page-break
