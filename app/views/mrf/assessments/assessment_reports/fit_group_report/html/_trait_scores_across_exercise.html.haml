.scores_competencies_graph.descending_order.descending_overall_score.border-bottom-grayLighter
  .traits_under_graph
    .divider2
    .large-text.bold
      #{get_assessment_purpose(@report)}&#176;  Scores Across Exercise
    .clr
    .divider1
    .graph_container
     
      .left_sec.pull-left
        .divider2
        %ul
          %li
            .span5.big-text.first.trait_title
              Maximum Rating
            .max_rating.medium-text.pull-left
              = trait_scores[:max_score_excluding_self][:points]
            .clr
          %li
            .span5.big-text.first.trait_title
              Minimum Rating
            .min_rating.medium-text.pull-left
              = trait_scores[:min_score_excluding_self][:points]
            .clr
      .right_sec.span22.pull-right
        .classic_competency_graph
          .classic_competency_graph_scale
            .block.pull-left
              = @trait_graph_buckets.first.min_val
            - @trait_graph_buckets[1..@trait_graph_buckets.length-1].each do |trait_graph_bucket|
              .block.pull-left{:style=>"width: #{870/(@trait_graph_buckets.size-1)}px; text-align: right"}
                = trait_graph_bucket.min_val
            .clr
          .graph
            .graph_content
              - old_min = @trait_graph_buckets.first.min_val
              - old_max = @trait_graph_buckets.last.max_val
              - if trait_scores[:max_score_excluding_self][:points]
                - percent_max = convertToRange(old_min, old_max, 0, 100, trait_scores[:max_score_excluding_self][:points])
                - percent_max = percent_max == 0 ? 5 : percent_max
              - else
                - percent_max = 0
              .divider1
              .descending_graph_bar.max{:style => "width: #{percent_max}%; background: #abed74"}
              .divider1
              
              - if trait_scores[:min_score_excluding_self][:points]
                - percent_min = convertToRange(old_min, old_max, 0, 100, trait_scores[:min_score_excluding_self][:points])
                - percent_min = percent_min == 0 ? 5 : percent_min
              - else
                - percent_min = 0
              .divider1
              .descending_graph_bar.max{:style => "width: #{percent_min}%; background: #ffcf36"}
              .divider1
          .divider2
      .clr
