- sorted_individual_scores = @report.report_data[:competency_scores].sort_by{|key,value| value[:average_score_including_self][:points].to_f }.reverse
- if @report.report_data[:group_average_vs_individual_rating]
  - if @report.report_hash[:competency_individual_scores].present?
    .average_individual_ratings.border-bottom-grayLighter
      .container
        .divider2
        .title
          Group Average versus Individual 360&#176 Rating
        .divider2
       
        .scores_competencies_graph.descending_order.descending_average_rating
          - @report.report_hash[:competency_individual_scores].each do |competency, competency_scores|
            - group_average = @report.report_data[:competency_scores][competency][:average_score_including_self][:points] rescue 0
            .traits_under_graph
              .graph_container
                .large-text.first.trait_title.line-height2
                  = competency
                .left_sec.pull-left
                  .divider2
                  %ul
                    %li
                      .span6.extra-medium-text.first.trait_title
                        Group Average
                      .stakeholder_rating.medium-text.pull-left
                        = group_average
                      .clr
                    - competency_scores.sort_by{|scores| scores[:score].to_f}.reverse.each do |scores|
                      %li
                        .span6.extra-medium-text.first.trait_title
                          = scores[:name]
                        .stakeholder_rating.medium-text.pull-left
                          = scores[:score]
                        .clr
                .right_sec.span22.pull-right
                  .classic_competency_graph
                    .classic_competency_graph_scale
                      .block.pull-left
                        = @competency_graph_buckets.first.min_val
                      - @competency_graph_buckets[1..@competency_graph_buckets.length-1].each do |competency_graph_bucket|
                        .block.pull-left{:style=>"width: #{869/(@competency_graph_buckets.size-1)}px; text-align: right"} 
                          = competency_graph_bucket.min_val
                      .clr
                     
                    .graph
                      - old_min = @competency_graph_buckets.first.min_val
                      - old_max = @competency_graph_buckets.last.max_val
                      - percent_360 = convertToRange(old_min, old_max, 0, 100, group_average.to_f)
                      - percent_360 = percent_360 == 0 ? 2 : percent_360
                      .graph_content
                        .divider1
                        .descending_graph_bar.max{:style => "width: #{percent_360}%; background: #469ada;"}
                        .divider1
                        - competency_scores.sort_by{|scores| scores[:score].to_f}.reverse.each do |scores|
                          - if scores[:score]
                            - percent_360 = convertToRange(old_min, old_max, 0, 100, scores[:score].to_f)
                            - percent_360 = percent_360 == 0 ? 2 : percent_360
                          - else
                            - percent_360 = 0
                          .divider1
                          .descending_graph_bar.max{:style => "width: #{percent_360}%; background: #469ada;"}
                          .divider1
                .clr
