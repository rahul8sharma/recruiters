- sorted_individual_scores = sorted_individual_scores(@report.report_hash)
- sorted_individual_scores[:user_scores].each_slice(sorted_individual_scores[:step]) do |step_data|
  = render :partial => "shared/360/group_report_header"
  .report_content
    .average_individual_ratings
      .color-info.big-text
        Group Average Ratings versus Individual Ratings
      .divider1 
      - grouped_by_competency = step_data.group_by{|scores| scores[:competency_name] }
      - grouped_by_competency.each do |competency, user_scores|
        - group_average = @report.report_data[:competency_scores][competency][:average_score_including_self][:points] rescue 0
        .scores_competencies_graph.descending_order.descending_average_rating
          .traits_under_graph
            .graph_container
              .left_sec.pull-left
                .extra-medium-text.bold.first.trait_title.line-height2
                  #{competency}
                %ul
                  %li
                    .span5.bold.medium-text.first.trait_title
                      Group Average
                    .stakeholder_rating.pull-left
                      #{group_average}
                    .clr
                  - user_scores.each do |data|
                    %li
                      .span5.medium-text.first.trait_title
                        #{data[:name]}
                      .stakeholder_rating.pull-left
                        #{data[:score]}
                      .clr
                 
              .right_sec.span13.pull-right
                .classic_competency_graph
                  .classic_competency_graph_scale
                    .block.pull-left
                      #{@competency_graph_buckets.first.min_val}
                    - @competency_graph_buckets[1..@competency_graph_buckets.length-1].each do |competency_graph_bucket|
                      .block.pull-left{:style=>"width: #{510/(@competency_graph_buckets.size-1)}px; text-align: right"} 
                        #{competency_graph_bucket.min_val}

                    .clr
                   
                  .graph
                    - old_min = @competency_graph_buckets.first.min_val
                    - old_max = @competency_graph_buckets.last.max_val
                    - percent_360 = convertToRange(old_min, old_max, 0, 100, group_average)
                    - percent_360 = percent_360 == 0 ? 2 : percent_360
                    .graph_content
                      .divider1
                      .descending_graph_bar.max{:style => "width: #{percent_360}%; background: #469ada;"}
                      .divider1                    
                      - user_scores.each do |data|
                        - if data[:score]
                          - percent_360 = convertToRange(old_min, old_max, 0, 100, data[:score].to_f)
                          - percent_360 = percent_360 == 0 ? 1 : percent_360
                        - else
                          - percent_360 = 0                      
                        .divider1
                        .descending_graph_bar.max{:style => "width: #{percent_360}%; background: #469ada;"}
                        .divider1
              .clr
  .page-break
