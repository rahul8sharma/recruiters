- sorted_competency_scores = @report.report_data[:competency_scores].sort_by{|key,value| value[:average_score_including_self][:points].to_f }.reverse
- if @report.report_data[:mrf_rating_competencies_and_values]
  .report_content
    .scores_competencies_graph.descending_order
      .color-info.big-text.pull-left
        360&#176; Ratings on Competencies/Values
      .pull-left.left-offset1{:style => "font-size: 47px;color: #B100A0"}
        &#8226;
      .span.bold.gray-dark
        Average 360&#176 Rating (Across the Group)
      .clr
      .traits_under_graph
        .graph_container
          .left_sec.pull-left
            .graph_instructions.pull-right
              .span1.divider2.stakeholder_rating_icon
              .clr
            .clr
            %ul
              - sorted_competency_scores.each do |competency, competency_score|
                %li
                  .trait_title.first.span5.default
                    = truncate competency, length: 25
                  .stakeholder_rating.pull-left
                    = competency_score[:average_score_including_self][:points] rescue "-"
                  .clr
                
          .right_sec.span13.pull-right
            .classic_competency_graph
              .classic_competency_graph_scale
                .block.pull-left
                  = @competency_graph_buckets.first.min_val
                - scale_width = (510/(@competency_graph_buckets.size-1))
                - @competency_graph_buckets[1..@competency_graph_buckets.length-1].each do |competency_graph_bucket|
                  .block.pull-left{:style=>"width: #{scale_width}px; text-align: right"}
                    = competency_graph_bucket.min_val
                .clr
              .graph.no-background
                .graph_content.no-background
                  - old_min = @competency_graph_buckets.first.min_val
                  - old_max = @competency_graph_buckets.last.max_val
                  - sorted_competency_scores.each do |competency, competency_score|
                    - if competency_score[:average_score_including_self][:points]
                      - percent_360 = convertToRange(old_min, old_max, 0, 100, competency_score[:average_score_including_self][:points])
                      - percent_360 = percent_360 == 0 ? 1 : percent_360
                    - else
                      - percent_360 = 0
                    .divider1
                    .descending_graph_bar.max{:style => "width: #{percent_360}%; background: #a119a6"}
                    .divider1
        .clr
    .divider2
