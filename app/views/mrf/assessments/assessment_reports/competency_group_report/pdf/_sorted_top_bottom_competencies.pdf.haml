.traits_under_graph
  .graph_container
    .left_sec.pull-left
      .divider1
      .span5.medium-text.first.trait_title.bold
        #{display_name}
      .pull-left{:style => "margin-left:4px;font-size: 47px;color: #83b4e2"}
        &#8226;
      .clr
      %ul
        -sorted_competency_scores.each do |competency, competency_score|
          %li
            .span5.medium-text.first.trait_title
              = truncate competency, length: 25
            .stakeholder_rating.pull-left
              = competency_score[:average_score_including_self][:points] rescue "-"
            .clr
       
    .right_sec.span13.pull-right
      .classic_competency_graph
        .classic_competency_graph_scale
          .block.pull-left
            = @competency_graph_buckets.first.min_val
          - scale_width = (510/(@competency_graph_buckets.size-1))
          - @competency_graph_buckets[1..@competency_graph_buckets.length-1].each do |competency_graph_bucket|
            .block.pull-left{:style=>"width: #{scale_width}px; text-align: right"}
              = competency_graph_bucket.min_val

          .clr
         
        .graph
          .graph_content
            - old_min = @competency_graph_buckets.first.min_val
            - old_max = @competency_graph_buckets.last.max_val
            - sorted_competency_scores.each do |competency, competency_score|
              - if competency_score[:average_score_including_self][:points]
                - percent_360 = convertToRange(old_min, old_max, 0, 100, competency_score[:average_score_including_self][:points])
                - percent_360 = percent_360 == 0 ? 1 : percent_360
              - else
                - percent_360 = 0            
              .divider1
              .descending_graph_bar.max{:style => "width: #{percent_360}%; background: #83b4e2"}
             
              .divider1
    .clr
