- max_weight = @score_buckets.map(&:weight).max
- min_weight = @score_buckets.map(&:weight).min
.classic_report
  .scores_competencies_graph.descending_order.descending_average_rating
    .traits_under_graph
      .graph_container
        .left_sec.pull-left
          .divider1
          .span7.first.color-info.large-text
            Behaviors measured
          .clr
          %ul
            - competency_scores.each do |competency_id, competency_data|
              %li
                .span7.first.trait_title
                  = competency_data[:name]
                .clr

        .right_sec.span18
          .classic_competency_graph
            .classic_competency_graph_scale
              .block.pull-left
                = @custom_score_bucket_names["#{score_buckets[0].uid}"]
              - score_buckets[1..score_buckets.size-1].each do |score_bucket|
                .block.pull-left{:style=>"width: #{710/(score_buckets.size-1)}px;"}
                  .pull-right
                    = @custom_score_bucket_names["#{score_bucket.uid}"]
                  .clr
              .clr
              .divider1
            .graph
              .graph_content
                - competency_scores.each do |competency, competency_data|
                  - weight = competency_data[:score][:weight]
                  - percentage = convertToRange(min_weight, max_weight, 0, 100, weight)
                  - percentage = percentage == 0 ? 2 : percentage
                  .divider1
                  .descending_graph_bar.max{:style => "background-color:#e9c537;width: #{percentage}%"}
                  .divider1
        .clr
