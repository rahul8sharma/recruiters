- average_norm_bucket_id = @norm_buckets.select{|x| x.weight == 4.0 }.first.id
- high_norm_bucket_id = @norm_buckets.map(&:id).max
%input{:type => "hidden", name: "exercise[exercise_tools_attributes][#{exercise_tool.id}][id]", value: exercise_tool.id}
%input{:type => "hidden", name: "exercise[exercise_tools_attributes][#{exercise_tool.id}][competency_configuration][#{competency.id}][name]", value: competency.name}
%input{:type => "hidden", name: "exercise[exercise_tools_attributes][#{exercise_tool.id}][competency_configuration][#{competency.id}][weightage]", value: (exercise_tool.competency_configuration[competency.id.to_s][:weightage] rescue 1)}
%input{:type => "hidden", name: "exercise[exercise_tools_attributes][#{exercise_tool.id}][competency_configuration][#{competency.id}][desired_range][from_bucket]", value: (exercise_tool.competency_configuration[competency.id.to_s][:desired_range][:from_bucket] rescue average_norm_bucket_id)}
%input{:type => "hidden", name: "exercise[exercise_tools_attributes][#{exercise_tool.id}][competency_configuration][#{competency.id}][desired_range][to_bucket]", value: (exercise_tool.competency_configuration[competency.id.to_s][:desired_range][:to_bucket] rescue high_norm_bucket_id)}
- competency.factors.each do |factor|
  - factor = Vger::Resources::Suitability::Factor.new(factor[factor.keys.first])
  - next if factor.modules.exclude?(exercise_tool.tool.name)
  - dfnr = @default_factor_norm_ranges[factor.id.to_i]
  %input{:type => "hidden", name: "exercise[exercise_tools_attributes][#{exercise_tool.id}][competency_configuration][#{competency.id}][traits][#{factor.id}][weightage]", value: (exercise_tool.competency_configuration[competency.id.to_s][:traits][factor.id.to_s][:weightage] rescue 1)}
  %input{:type => "hidden", name: "exercise[exercise_tools_attributes][#{exercise_tool.id}][competency_configuration][#{competency.id}][traits][#{factor.id}][name]", value: factor.name}
  %input{:type => "hidden", name: "exercise[exercise_tools_attributes][#{exercise_tool.id}][competency_configuration][#{competency.id}][traits][#{factor.id}][desired_range][from_bucket]", value: (exercise_tool.competency_configuration[competency.id.to_s][:traits][factor.id.to_s][:desired_range][:from_bucket] rescue (dfnr ? dfnr.from_norm_bucket_id : average_norm_bucket_id))}
  %input{:type => "hidden", name: "exercise[exercise_tools_attributes][#{exercise_tool.id}][competency_configuration][#{competency.id}][traits][#{factor.id}][desired_range][to_bucket]", value: (exercise_tool.competency_configuration[competency.id.to_s][:traits][factor.id.to_s][:desired_range][:to_bucket] rescue (dfnr ? dfnr.to_norm_bucket_id : high_norm_bucket_id))}
