- content_for :jquery do
  = javascript_include_tag "jquery"
  = javascript_include_tag "jquery_ujs"

- content_for :stylesheets do
  = stylesheet_link_tag "jstree"

.new
  .page-title.pull-left
    Create SJT
    %span.sub-page-title.medium-text  Takes less than a minute!
  .clr
  .divider1
  = render :partial => "shared/sjt/sjt_navigation-sub-nav"
  .divider2

  = form_for @assessment, :as => :assessment, :url => company_sjt_assessments_path(:company_id => params[:company_id]), multipart: true, method: "post", html: {id: "assessment_form", class: "creat-test-form" } do |f|
    = f.hidden_field :company_id, value: @assessment.company_id, :id => "input_company_id"
    -# = f.hidden_field :report_configuration, :id => "input_config", value: @assessment.report_configuration.to_json
    %input{:id => "report_type", :value => "suitability", :type => "hidden"}
    = f.hidden_field :company_id, value: @assessment.company_id, :id => "input_company_id"
    -# = f.hidden_field :report_configuration, :id => "input_config", value: @assessment.report_configuration.to_json
    -# %input{:id => "report_type", :value => "suitability", :type => "hidden"}
    .divider1
    .control-group
      %label
        Select the Industry your Company belongs to
      %select.span10.first{name: 'assessment[industry_id]', id: 'select_industry'}
        %option{:value => ""}
          Industry
        - @industries.each do |id, industry|
          %option{:value => (industry.id), selected: (@assessment.industry_id.to_s == industry.id.to_s || @company.industry_id.to_s == id.to_s)}
            = industry.name
      .clr
    .control-group
      %label
        Select the Department (or Function) for which you are creating this Assessment
      %select.span12.first{name: '@assessment[functional_area_id]', id: 'select_functional_area'}
        %option{:value => ""}
          Department
        - @functional_areas.each do |id,functional_area|
          %option{:value => (functional_area.id), selected: (@assessment.functional_area_id.to_s == id.to_s)}
            = functional_area.name
      .clr
    .control-group
      %label
        Select Experience Range of the Job Role that you are creating this Assessment for
      %select.span7.first{name: '@assessment[job_experience_id]', id: 'select_job_experience'}
        %option{:value => ""}
          Experience
        - @job_experiences.each do |id,job_experience|
          %option{:value => (job_experience.id), selected: (@assessment.job_experience_id.to_s == id.to_s)}
            = job_experience.display_text
      .clr
    .control-group
      %label
        Enter a Title for the Assessment
      = f.text_field :name, :class => "span17 first", :placeholder => "(e.g. Senior Marketing Manager)"
      .clr
    - if ["new","create"].include?(params[:action])
      = f.fields_for :sets do |set_form|
        = set_form.hidden_field :name, value: Rails.application.config.default_set["name"]
        = set_form.hidden_field :start_index, value: Rails.application.config.default_set["start_index"]
        = set_form.hidden_field :end_index, value: Rails.application.config.default_set["end_index"]
        - if !is_superadmin?
          = set_form.hidden_field :page_size, value: Rails.application.config.default_set["page_size"]
        - else
          .control-group
            %label
              Page Size
            = set_form.text_field :page_size, value: Rails.application.config.default_set["page_size"], :class => "first span17"
            .clr
    .clr
    - if is_superadmin?
      = f.hidden_field :assessment_type, value: Vger::Resources::Assessment::AssessmentType::SJT_COMPETENCY, :id => "set_assessment_type"    
      .control-group
        %label
          Select Custom Factual Information Form
        %select.span10.first{ name: "defined_form_id" }
          %option{ value: "" }
            Select Custom Factual Information Form
          - @defined_forms.each do |defined_form|
            %option{ value: defined_form.id }
              = defined_form.name
        .clr
      .control-group
        %label
          Select Assessment Completion Notification Template
        %select.span10.first{name: '@assessment[assessment_completion_notification_template_id]', id: 'select_assessment_completion_notification_template_id'}
          %option{:value => ""}
            Select Assessment Completion Notification Template
          - @templates.each do |template|
            %option{:value => template.id, selected: (@assessment.assessment_completion_notification_template_id == template.id)}
              = template.name
        .clr      
      .control-group
        %label
          Post Assessment Redirect URL (URL should start with 'http' or 'https')
        %input.span10.first{ name: '@assessment[redirect_url]', value: @assessment.redirect_url }
        .clr
      .control-group
        %label
          Custom Thank You Message
        %textarea.span10.first{ name: '@assessment[thank_you_message]' }
          = @assessment.thank_you_message
        .clr
      .control-group
        %label
          = f.check_box :show_help_text, id: "show_help_text"
          Show Help Text for Items?
        .clr  
      .control-group  
        %label
          = f.check_box :should_send_notifications, id: "should_send_notifications"
          Send Report Notifications
        .clr  
      .control-group
        %label
          = f.check_box :enable_table_of_contents
          Enable Table of Contents
        .clr  
    - else
      = f.hidden_field :language, value: 'en'
      = f.hidden_field :assessment_type, value: @assessment.assessment_type || Vger::Resources::Assessment::AssessmentType::SJT_COMPETENCY, :id => "set_assessment_type"    
      = f.hidden_field :assessment_completion_notification_template_id, :id => "input_assessment_completion_notification_template_id", value: @assessment.assessment_completion_notification_template_id || (@templates.first.id rescue nil)
    .divider2
    .pull-right
      %input.btn.btn-warning.large-text{ type: "submit", value: "Proceed", name: "sjt_competency" }
    .clr
    .divider1

  = render :partial => "shared/report_configuration"
  .divider1
