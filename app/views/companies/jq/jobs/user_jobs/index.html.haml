- location = @job.locations.first
.companies-list
  .page-title
    .divider1
    = @job.title
  .divider2
  .pull-left
    %i.icon-map-marker.color-success.big-text
    %span.color-success.extra-medium-text
      Location: 
    = location ? location.name : "-"
  .span
    %i.icon-calendar.color-success.big-text
    %span.color-success.extra-medium-text
      Posted on date:  
    = hdate(@job.posted_on, "-")
  .clr
  .divider1
  .span1.text-center.bg-success.first
    %i.icon-copy.extra-large-text.white.line-height2
  .pannel.pull-left
    .span5
      %span.color-success
        Number of application: 
      = @all_user_jobs_count
    .border-left-grayLighter.pull-left
      .span2.text-center.first
        %i.icon-ok-sign.color-green.big-text
        %span.color-green.extra-medium-text
          = @accepted_user_jobs_count
      .span2.text-center.first
        %i.icon-remove-sign.color-stop.big-text
        %span.color-stop.extra-medium-text
          = @rejected_user_jobs_count
      .clr
    .border-left-grayLighter.pull-left
      .span6
        %span.medium-text.color-success
          Number of applicants Ignored:
        = @ignored_user_jobs_count
      .clr
    .clr
  .pull-right
    .muted.medium-text
      = form_for :search, url: company_jq_job_user_jobs_path(params[:company_id], @job.id), method: :get, html: { id: "user_jobs_search_form" } do |f|
        - params[:search] ||= {}
        .span.line-height2
          Filter by Status
        %select.span3{name: "search[jq_user_jobs.recruiter_status]", onchange: "document.getElementById('user_jobs_search_form').submit();"}
          %option
            All
          - Vger::Resources::Jq::CandidateJob::RECRUITER_STATUSES.each do |status|
            %option{ value: status, selected: (params[:search]["jq_user_jobs.recruiter_status"] == status) }
              = status
      .clr
  .clr
  
  .divider1
  .list-snippet-titles.extra-medium-text.clearfix
    .divider1
    .span7.left-offset1
      = sort_link("Name",company_jq_job_user_jobs_path(params[:company_id],@job.id),:name,params[:search])
    .span6
      Location
    .span6.first
      = sort_link("Applied on date",company_jq_job_user_jobs_path(params[:company_id],@job.id),:created_at,params[:search])
    .span6
      Psychometric Score
    .span
      Status

    .clr
    .divider1
  %ul
    - @user_jobs.each do |user_job|
      %li.list-snippet
        .span7.left-offset1
          %a{:href => company_jq_job_user_job_path(params[:company_id],@job.id,user_job.id) }
            = user_job.user.name
        .span6
          = user_job.user.location.name rescue "-"
        .span6.first
          = hdate(user_job.created_at,"-")
        .span6
          - report = @reports[user_job.id]
          - if report && report.status == Vger::Resources::Suitability::CandidateAssessmentReport::Status::UPLOADED
            - view_mode = "html"
            - url = S3Utils.get_url(report.s3_keys[view_mode][:bucket], report.s3_keys[view_mode][:key])
            %a{:href => url, target: "_blank"}
              = report.report_data[:overall_score_bucket][:name]
          - else
            %i.icon-spinner.icon-spin
            Calculating...     
        .span{ class: (user_job.recruiter_status == Vger::Resources::Jq::CandidateJob::RecruiterStatus::ACCEPTED ? 'color-green' : 'color-stop') }
          -#toggle above class .color-stop  and below text "Rejected"
          = user_job.recruiter_status.titleize

        .clr
  .divider1      
  .pull-right
    = render :partial => "shared/pagination", locals: { objects: @user_jobs }
  .clr  
.divider4
