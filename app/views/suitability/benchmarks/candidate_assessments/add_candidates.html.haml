.add.benchmark
  .page-title #{@assessment.name}
  .divider1
  = render :partial => "shared/benchmark-flow-sub-nav"
  .divider2
  -#%a.underlined.pull-right{:href => help_adding_candidates_path, :target => "_blank"}
    -#View Instructions
  .clr
  - params[:candidate_stage] ||= Vger::Resources::Candidate::Stage::EMPLOYED
  .margin-auto.span21
    .span11.first.left-offset1.extra-medium-text
      What is the purpose of assessing these Assessment takers?
    .span8
      %label
        - checked = (params[:candidate_stage] == Vger::Resources::Candidate::Stage::EMPLOYED)
        %input.span1{:type => "radio", :name => "candidate_stage", value: Vger::Resources::Candidate::Stage::EMPLOYED, :onClick => "getCandidateType('#{Vger::Resources::Candidate::Stage::EMPLOYED}');", checked: checked}
        #employee
          .span.medium-text
            For Development 
            //add ".checked" e.g. %span.medium-text.checked
          %i.muted.span
            (Existing Employees)
          .clr
      .divider1
      %label
        - checked = (params[:candidate_stage] == Vger::Resources::Candidate::Stage::CANDIDATE)
        %input.span1{:type => "radio", :name => "candidate_stage", value: Vger::Resources::Candidate::Stage::CANDIDATE, :onClick => "getCandidateType('#{Vger::Resources::Candidate::Stage::CANDIDATE}');", checked: checked}
        #candidate
          .span.medium-text
            For Hiring 
            //add ".checked" e.g. %span.medium-text.checked
          %i.muted.span
            (Potential Employees)
          .clr
      .clr
    .clr
    
    .divider3
    .big-text.text-center
      Please add your Top Performing Employees 
    .divider3
    .select-candidate-type 
      - if current_user.type == "SuperAdmin"
        = render :partial => "suitability/benchmarks/candidate_assessments/bulk_upload"
    .divider1
    - checked = (params[:upload_method] == "manual")
    - if current_user.type == "SuperAdmin"
      %label
        %input{:type => "radio", :name => "upload_type", value: "manual", :onClick => "window.location='#{request.path}?upload_method=manual&candidate_stage=#{params[:candidate_stage]}'", :checked => checked}
        %b.extra-medium-text Add Top Performers manually: 
      .divider1
    = form_for @assessment, :as => :assessment, :url => add_candidates_company_benchmark_path(:company_id => params[:company_id], :id => params[:id]), multipart: true, method: :put do |f|
      .divider1
      %input{ type: "hidden", value: "#{params[:candidate_stage]}", name: "candidate_stage" }
      %input{ type: "hidden", value: "#{params[:upload_method]}", name: "upload_method" }
      %input{ id:"candidate_stage", type: "hidden", value: "employee", name: "candidate_stage" }
      %div{class: "#{checked ? 'activated':'de-activated'}"}
        .left-offset2.first
          .span9.first.big-text
            Top Performer's name
          .span8.big-text.left-offset1
            .span Top Performer's email address
          .clr
        .divider1 
        %ul.add-candidates.clearfix
          - 5.times do |index|
            = render :partial => "suitability/custom_assessments/candidate_assessments/assessment_candidate_assessment_fields", :locals => { :index => (index+1), :candidate => (params[:candidates].to_a[index][1] rescue {}) } 
        .divider2
      .muted.left-offset2.first
        .big-text
          Following is the Preview of the email that Assessment takers will receive.
        .divider1   
        - if params[:candidate_stage] == Vger::Resources::Candidate::Stage::CANDIDATE
          = render :partial => "suitability/custom_assessments/candidate_assessments/mail_body_for_candidate"
        - else
          = render :partial => "suitability/custom_assessments/candidate_assessments/mail_body_for_employee"
      .divider2  
      %input.pull-left.btn.btn-warning.inverse.large-text{ disabled: !checked, type: "submit", value: "Add Assessment Takers Later"}

      %input.pull-right.btn.btn-warning.large-text{ disabled: !checked, type: "submit", value: "Submit"}
        
      .clr

:javascript  
  document.getElementById('employee').style["color"] = '#f58220';
  function getCandidateType(type){    
    document.getElementById('candidate_stage').value = type;
    (type == 'employee' ? addClass('employee' , 'candidate') : addClass('candidate', 'employee'))
  }
  function addClass(addTo, removeFrom){
    document.getElementById(addTo).style["color"] = '#f58220';
    document.getElementById(removeFrom).removeAttribute('style');
  }