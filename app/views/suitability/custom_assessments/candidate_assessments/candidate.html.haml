.candidate-details
  .span22.first.page-title
    .divider1
    Assessment #{@assessment.id} - #{@assessment.name}
  
  %a.btn.btn-warning.big.big-text.pull-right.span{:href=>candidates_company_custom_assessment_path(:company_id => params[:company_id], :id => params[:id]), :title=>"View All Candidates"}
    View All Candidates
  .clr
  .divider2
  = render :partial => "shared/candidate-content-sub-nav"

  .padding-all2.border-warning.shifted-up1.extra-medium-text
    .span19.margin-auto
      %ul
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Assessment Taker: 
          .span8
            #{@candidate.name}
          .clr
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Email id:
          .span8
            #{ h @candidate.email}

          .clr
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Contact no.:
          .span8
            #{ h @candidate.mobile, nil, :prefix => "+91-" }
          .clr
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Industry:
          .span8
            #{ h(@candidate.industry.name) rescue 'Not available' }
          .clr          
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Current Location:
          .span8
            #{ h(@candidate.location.name) rescue 'Not available' }
          .clr
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Current Functional area:
          .span8
            #{ h(@candidate.functional_area.name) rescue 'Not available' }
          .clr          
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Age:
          .span8
            #{ @candidate.birth_date.present? ? (Time.now.year - Date.parse(@candidate.birth_date).year) : "Not available" }
          .clr
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Experience in Current Company:
          .span8
            #{ h(@candidate.current_company_experience, nil, :suffix => " Years") }
          .clr
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Gender:
          .span8
            = @candidate.gender.present? ? raw(t "gender.#{@candidate.gender}") : "Not available"
          .clr
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Total Work Experience:
          .span8
            #{ h(@candidate.total_experience, nil, :suffix => " Years")} 
          .clr
        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Current CTC:
          .span8
            #{ h(@candidate.current_ctc,nil, :suffix => " Lakhs") } 
          .clr
        -#
          %li.border-bottom-grayLighter.padding-all1
            .span9.big-text
              Marital Status:
            .span8
              = @candidate.marital_status.present? ? raw(t "marital_status.#{@candidate.marital_status}") : "Not available"
            .clr
        -#
          %li.border-bottom-grayLighter.padding-all1
            .span9.big-text
              Current Company Name:
            .span8
              #{ h @candidate.current_company }
            .clr
        -#
          %li.border-bottom-grayLighter.padding-all1
            .span9.big-text
              Degree with Specialization:
            .span8
              TODO
            .clr

        %li.border-bottom-grayLighter.padding-all1
          .span9.big-text
            Number of Dependants:
          .span8
            #{ h @candidate.no_of_dependents }
          .clr
  .divider1
  .padding-all2.border-warning.shifted-up1.extra-medium-text
    .page-title
      Reports
    .divider2
    .list-snippet-titles.large-text.clearfix
      .span3.first
        %a{:href => "#", :title => "Sort by assessment ID in ascending order"}
          AID
          %i.icon-chevron-down.small-text.line-height1
      .span5
        %a{:href => "#", :title => "Sort by Company Name in ascending order"}
          Company Name
          %i.icon-chevron-down.small-text.line-height1
      .span10
        %a{:href => "#", :title => "Sort by Assessment Name in ascending order"}
          Assessment Name
          %i.icon-chevron-down.small-text.line-height1
      .span5
        Recommendation
      .span5 
        %a{:href => "#", :title => "Sort by Assessment Status in ascending order"}
          Assessment Status
          %i.icon-chevron-down.small-text.line-height1 
    %ul
      - @candidate_assessments.each do |candidate_assessment|
        - report = candidate_assessment.candidate_assessment_reports[0] 
        %li.list-snippet
          .divider1
          .span3.first
            %a{:href=> company_custom_assessment_path(:id => candidate_assessment.assessment_id, :company_id => @company.id), :title=>"TEST#{@assessment.id}"} 
              #{candidate_assessment.assessment.id}
          .span5
            #{@company.name}
          .span10
            #{candidate_assessment.assessment.name}
          .span5
            - if candidate_assessment.candidate_stage != Vger::Resources::Candidate::Stage::EMPLOYED
              = Vger::Resources::Suitability::Recommendation.where(:query_options => { :overall_fitment_grade_id => candidate_assessment.overall_fitment_grade_id, :candidate_stage => candidate_assessment.candidate_stage }).all[0].body rescue '-' 
            - else
              \-  
          .span5
            - if report
              - if report.status == Vger::Resources::Suitability::CandidateAssessmentReport::Status::UPLOADED
                - url =  company_custom_assessment_candidate_candidate_assessment_report_url(:company_id => params[:company_id], :candidate_id => candidate_assessment.candidate_id, :custom_assessment_id => @assessment.id, :id => report.id, :view_mode => "html")
                %a{:href => url, :title => "View Report", target: "_blank"}
                  View Report
              - else
                %i.icon-spinner.icon-spin 
                Generating report...  
            - else 
              - if candidate_assessment.status == Vger::Resources::Suitability::CandidateAssessment::Status::EXPIRED
                Expired
              - else
                Pending
          .clr         
