- content_for :jquery do
  = javascript_include_tag "jquery"
  = javascript_include_tag "jquery_ujs"

.competencies
  .page-title 
    Tests
  .inn.gray-gradient
    = render :partial => "shared/navigation-sub-nav"
    .divider1
    .description-section.medium-text.clearfix
      .span.first
        %b Test Title: 
      .span18
        #{@assessment.name}
      .clr
      .divider1
      .span.first
        %b Industry:  
      .span4
        #{@assessment.industry.name rescue '-'}
      .span.left-offset1
        %b Functional Area: 
      .span4
        #{@assessment.functional_area.name rescue '-'}
      .span.left-offset1
        %b Experience in Years: 
      .span2
        #{@assessment.job_experience.display_text rescue '-'}
    .clr
    = form_for @assessment, :as => :assessment, :url => competencies_company_custom_assessment_path(:company_id => params[:company_id], :id => params[:id]), multipart: true, method: :put do |f|
      .action
        .pull-left
          %b.big-text Select the Competencies you would like to measure:
        %button.pull-right.btn.btn-info
          Proceed
        .clearfix
      
      .medium-text
        %b Custom Competencies
      .pull-right
        %b Order  
      .clr
      - all_competency_index = 0
      - all_competency_count = @local_competencies.count + @global_competencies.count
      - if !@local_competencies.present? 
        No custom competencies present for the company
      - else
        .test-competency-list
          .global_selector
            %input{:type=>"checkbox", checked: ((@local_competencies.map(&:id) - @assessment.competency_ids).size == 0), id: "check_all_local"}
            %label{ for: "check_all_local" }
              Select All
          .test-competency-list-container
            %ul
              - @local_competencies.each do |competency|
                %li
                  %input{:type=>"checkbox", checked: @assessment.competency_ids.include?(competency.id), name: "assessment[competencies][]", value: competency.id, class: "local_competency", :id=>"competency_#{competency.id}"}
                  %label{:for=>"competency_#{competency.id}"}
                    %b
                      = competency.name
                  .pull-right    
                    %select{name: "assessment[competency_order][#{competency.id}]"}  
                      - all_competency_count.times do |index|
                        - selected = @assessment.competency_order.index(competency.id)
                        - selected = all_competency_index if !selected
                        %option{value: index, selected: index==selected}
                          = index+1
                    .clr      
                    %br
                  .factors{ style: "padding-left:32px;" }
                    %b
                      Factors: 
                    = competency.factor_names.join(", ")
                - all_competency_index+=1
            .clr
      .medium-text
        %b Standard Competencies
      .pull-right
        %b Order  
      .clr  
      - if !@global_competencies.present? 
        No standard competencies present
      - else 
        .test-competency-list
          .global_selector
            %input{:type=>"checkbox", checked: ((@global_competencies.map(&:id) - @assessment.competency_ids).size == 0), id: "check_all_global"}
            %label{:for => "check_all_global"}
              Select All
          .test-competency-list-container.last
            %ul
              - @global_competencies.each do |competency|
                %li
                  %input{:type=>"checkbox", checked: @assessment.competency_ids.include?(competency.id), name: "assessment[competencies][]", value: competency.id, class: "global_competency", :id=>"competency_#{competency.id}"}
                  %label{:for=>"competency_#{competency.id}"}
                    %b
                      = competency.name
                  .pull-right    
                    %select{name: "assessment[competency_order][#{competency.id}]"}  
                      - all_competency_count.times do |index|
                        - selected = @assessment.competency_order.index(competency.id)
                        - selected = all_competency_index if !selected
                        %option{value: index, selected: index==selected}
                          = index+1
                  .clr        
                  %br
                  .factors{ style: "padding-left:32px;" }
                    %b
                      Factors: 
                    = competency.factor_names.join(", ")
                - all_competency_index+=1    
            .clr
      %button.pull-right.btn.btn-info
        Proceed
= javascript_include_tag 'competencies'

