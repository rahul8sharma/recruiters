= javascript_include_tag 'jquery'
= javascript_include_tag 'jquery_ujs'
- template = @templates[0]
- content_for :email_partial do
  %span.extra-medium-text.span2.first.show
    Message
  .massage-body.italic.span15.medium-text
    - if template
      = template.preview(:body).html_safe
    - else
      - if params[:candidate_stage] == Vger::Resources::User::Stage::CANDIDATE
        = render :partial => "suitability/custom_assessments/user_assessments/mail_body_for_user"
      - else
        = render :partial => "suitability/custom_assessments/user_assessments/mail_body_for_employee"
  .clr

- if !is_superuser? && @company.prefill_notification_details
  - params[:options] ||= { :manager_name => current_user.name, :manager_email => current_user.email, :send_report_links_to_manager => true }
- else  
  - params[:options] ||= {}
.page-title
  .divider1
  Assessment - #{@assessment.name}
.divider2
= render :partial => "shared/navigation-sub-nav"
.divider3
- if params[:users]
  - url = send_test_to_users_path
- else
  - url = bulk_send_test_to_users_path
= form_for @assessment, :as => :assessment, :url => url, multipart: true, method: :put, html: { class: "create-test-form", message: "Are you sure you want to send the assessment?"}do |f|
  %input{ type:'hidden', name: 'candidate_stage', value: params[:candidate_stage] }
  %input{ type:'hidden', name: 'trial', value: params[:trial].to_s }
  - if params[:users]
    %input{:type => "hidden", name: "user_ids", value: params[:users].keys.join(",") }
    %input{:type => "hidden", name: "upload_type", value: "manual" }
    - params[:users].each do |id,user_data|
      %input{:type => "checkbox", name: "selected_users[#{id}]", checked: true, style: "display:none;"}
      %input{:type => "hidden", name: "users[#{id}][name]", value: user_data[:name]}
      %input{:type => "hidden", name: "users[#{id}][email]", value: user_data[:email]}
      %input{:type => "hidden", name: "users[#{id}][applicant_id]", value: user_data[:applicant_id]}
  - else
    %input{:type => "hidden", name: "upload_type", value: "bulk" }
    %input{:type => "hidden", name: "s3_bucket", value: @s3_bucket }
    %input{:type => "hidden", name: "s3_key", value: @s3_key }
    %input{:type => "hidden", name: "functional_area_id", value: @functional_area_id }
  .send-assessment
    .heading
      %i.icon-envelope
      Email Settings
    .divider2
    = render :partial => "shared/email_template", :locals => { :templates => @templates, :email_headline => "Following is the Preview of the email that Assessment takers will receive."}
    
    .divider1
    - if @company.subscription_mgmt
      - @subscriptions ||= []
      - usable_subscriptions = @subscriptions.select{|subscription| subscription.unlocked_invites_count > 0 }
      - if usable_subscriptions.size > 1
        .divider2
        .heading
          %i.icon-cogs
          Sending Settings
        .divider2

        .left-offset1
          .big-text
            Automated Sending
          .divider1
          %label.extra-medium-text.muted.left-offset1
            %input{:type=>"radio",  name: "options[package_selection]", value:"auto"}
            Choose the best possible combination of packages and send assessment invitations.
          .divider1

          .big-text.text-center.bold.span17
            OR
          .clr
          .divider1

          .big-text
            Manual Sending - Select a Package
          .divider1

          %ul.span17.manual-sending-list.first
            %li
              .span5
                Package ID
              .span6.text-center
                Remaining Assessments
              .pull-right.text-center
                Expires In
              .clr
            - usable_subscriptions.each do |subscription|
              %li
                .span5
                  %label
                    %input{:type=>"radio", name: "options[package_selection]", value:subscription.id}
                    = subscription.id
                .span6.text-center
                  = subscription.unlocked_invites_count
                .pull-right.text-center
                  #{(Date.parse(subscription.valid_to) - Date.today).to_i} Days
                .clr

          .clr

          .divider2
      .divider2    
      .heading
        %i.icon-check
        Choose Validity of Assessment Links
        .divider1

      .left-offset1
        %select.span8.first{name: "options[link_validity]"}
          %option{ value: '' }
            Default
          - 10.times do |index|
            %option{value: index+1}
              #{index+1} days
          %option{value: 15}
            15 days
          %option{value: 20}
            20 days
        .clr
        .divider1
        %p.muted.extra-medium-text
          Number of users exceeding the available assessments in packages will not be sent assessment invitations.
          %br/
          - if usable_subscriptions.size > 1
            Not all Assessment Links may be assigned the chosen validity in case of Automated Sending.
      .divider2.border-bottom-grayLighter
      .clr

    .divider2
    .extra-medium-text
      Optional: Enter the email addresses of the people who should receive the Assessment Reports
      .medium-text
        (after the Assessment is completed by the Assessment Taker)
    .divider1
    = surround '<!--[if IE]>'.html_safe, '<![endif]-->'.html_safe do
      %input.span18.first{ type:'text', name: 'report_email_recipients'}
      .clr
      .ie
        Enter email addresses separated by commas. Do not add Assessment Taker's emails here.
    = surround '<!--[if !IE]><!-->'.html_safe, '<!--<![endif]-->'.html_safe do
      %input.span18.first{ type:'text', name: 'report_email_recipients', placeholder:"Enter email addresses separated by commas. Do not add Assessment Taker's emails here."}
      .clr
    .divider2
    .extra-medium-text
      Optional: Enter the email addresses of the people who should be cced in the invitation email
    .divider1
    = surround '<!--[if IE]>'.html_safe, '<![endif]-->'.html_safe do
      %input.span18.first{ type:'text', name: 'cc_emails'}
      .clr
      .ie
        Enter email addresses separated by commas. Do not add Assessment Taker's emails here.
    = surround '<!--[if !IE]><!-->'.html_safe, '<!--<![endif]-->'.html_safe do
      %input.span18.first{ type:'text', name: 'cc_emails', placeholder:"Enter email addresses separated by commas. Do not add Assessment Taker's emails here."}
      .clr
    - if params[:users]
      .divider2
      .span17.extra-medium-text.first
        .big-text
          Send Notifications (Optional)
        .divider1
        %input.span8.pull-left.first{ type:'text', name: 'options[manager_name]', placeholder:"Recipient Name", value: params[:options][:manager_name]}
        %input.span8.pull-left{ type:'text', name: 'options[manager_email]', placeholder:"Recipient Email Address", value: params[:options][:manager_email]}
        .clr
      .clr
    .divider1
    - if params[:users]
      .extra-medium-text.muted
        Choose what the Notifications Recipient should receive:
      .divider1
      %div
        %label.muted.medium-text.pull-left
          %input{:type=>"checkbox", name: "options[send_report_links_to_manager]", checked: params[:options][:send_report_links_to_manager]}
          Report Links
        %label.muted.medium-text.pull-left.left-offset1
          %input{:type=>"checkbox", name: "options[send_assessment_links_to_manager]", checked: params[:options][:send_assessment_links_to_manager]}
          Assessment URLs
        .clr

    .divider1
    %div{style: "display:#{is_superuser? ? 'block': 'none'}"}
      %label.muted.medium-text.pull-left{ :for => "send_report_to_user", :class => "font-normal"}
        %input{ type:'checkbox', name: 'send_report_to_user', id: "send_report_to_user" }
        Send report to user
      %label.muted.medium-text.pull-left.left-offset1
        %input{:type=>"checkbox", name: "options[send_sms]"}
        Also send test invitations to users via SMS
      %label.muted.medium-text.pull-left.left-offset1
        %input{:type=>"checkbox", name: "options[send_email]", checked: true}
        Send default email
      .clr
    .divider2.border-bottom-grayLighter
    .divider2
    - if is_superuser? && !params[:users]
      .heading
        %i.icon-calendar
        Schedule Assessment (Optional)
      %p.extra-medium-text
        Please select the Date and Time at which the Assessment should be sent. 
      .divider1
      .date-time-pick
        %label.label-main.extra-medium-text.default.pull-left
          Date &amp; time
        .icon-time.big-text.pull-left
        %input.pull-left.input-main{ name: "schedule_at", id: "datetimepicker" }
        .clr
      .divider3
    %input.btn.btn-warning.large-text.pull-right{:type => "submit", :value => "Send Assessment"}
    .clr
    - if is_superuser? && !params[:users]
      %p.extra-medium-text.text-right.pull-right
        Assessment Scheduled on 
        %span#final-value
        

    .clr
    .divider1

- content_for :stylesheets do
  = stylesheet_link_tag "jquery-ui/jquery.datetimepicker"
  = stylesheet_link_tag "jquery-ui/jquery-ui"
= javascript_include_tag 'add_users'
:javascript
  jQuery(document).on('ready', function(){
    var displayDate = ($('#datetimepicker').val()).split(' ')[0];
    var displayTime = ($('#datetimepicker').val()).split(' ')[1];
    $('#final-value').html(displayDate+" at "+ displayTime);

    $('#datetimepicker').datetimepicker({
      onChangeDateTime:function(dp, $input){
        $('#final-value').html($input.val().split(' ')[0]+" at "+$input.val().split(' ')[1]);
      }
    });
  });