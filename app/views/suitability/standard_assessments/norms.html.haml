- content_for :jquery do
  = javascript_include_tag "jquery"
  = javascript_include_tag "jquery_ujs"

.norms
  .page-title 
    #{@assessment.name}
  .divider1
  = render :partial => "shared/navigation-sub-nav"
  .divider2
      
  = form_for @assessment, :as => :assessment, :url => norms_standard_assessment_path(:company_id => params[:company_id], :id => params[:id]), multipart: true, method: :put do |f|
    %input{type: 'hidden', name: 'assessment[industry_id]', value: @assessment.industry_id}
    %input{type: 'hidden', name: 'assessment[functional_area_id]', value: @assessment.functional_area_id}
    %input{type: 'hidden', name: 'assessment[job_experience_id]', value: @assessment.job_experience_id}
    - 2.times do 
      .span15.first
        .factor-list
          .titles.clearfix
            .span7.first
              .big-text
                Behavioral Trait
              .muted
                Place the cursor on individual Traits below to see their definition
                
            .span6.left-offset1
              .big-text
                Expected Score Range
              .muted
                Choose Minimum and Maximum score
            .clr
            .divider1 
            .semi-muted
              .left-offset8.first.span3
                Minimum
              .span3 
                Maximum
    .clr                
    - aindex = 0
    .factor-list
      %ul.factor-snippet.clearfix
        - @factor_norms_by_fit.values.each_with_index do |norms,fit_index|
          - norms[:factors].each_with_index do |assessment_factor_norm,index|
            - aindex = aindex + 1
            = render :partial => 'assessment_factor_norm_fields', :locals => { :assessment_factor_norm => assessment_factor_norm, :index => aindex, fit_index: fit_index }
          - norms[:alarm_factors].each_with_index do |assessment_factor_norm,index|
            - aindex = aindex + 1
            = render :partial => 'assessment_alarm_factor_norm_fields', :locals => { :assessment_factor_norm => assessment_factor_norm, :index => aindex, fit_index: fit_index }    
    .divider3
    %button.pull-left.btn.btn-warning.inverse.large-text
      Save and Close
    %button.pull-right.btn.btn-warning.large-text
      Proceed
    .clr
    .divider1

:javascript
  jQuery(document).ready(function ($) {
      $("input[name='selected_factor']").removeAttr("disabled");
      $("input[name='selected_factor']").change(function () {
          var index = $(this).attr("index");
          if ($(this).is(":checked")) {
              $("input:not(:checkbox)[index='" + index + "']").removeAttr("disabled");
              $("select[index='" + index + "']").removeAttr("disabled");
              $("#critical_checkbox_" + index).removeAttr("disabled");
              $("#li_" + index).addClass("checked");
          } else {
              var id = $("#id_" + index).val();
              if (id != null && id != "") {
                  $("#destroy_" + index).val(true);
              } else {
                  $("input:not(:checkbox)[index='" + index + "']").attr("disabled", 'disabled');
                  $("select[index='" + index + "']").attr("disabled", 'disabled');
                  $("#critical_cnotheckbox_" + index).attr("disabled", 'disabled');
                  $("#li_" + index).removeClass("checked");
              }
          }
      });

      $('#edit_assessment').submit(function () {
        $('#edit_assessment button').attr("disabled", "disabled");
        return true;
      });

      $("input[name='checkbox_critical']").change(function () {
          var index = $(this).attr("index");
          if ($(this).is(":checked")) {
              $("#critical_" + index).val("on");
          } else {
              $("#critical_" + index).val("off");
          }
      });

      $("#check_all_fit0").change(function () {
          $(".check_fit0").prop("checked", $(this).is(":checked"));
          $(".check_fit0").trigger("change");
      });

      $("#check_all_fit1").change(function () {
          $(".check_fit1").prop("checked", $(this).is(":checked"));
          $(".check_fit1").trigger("change");
      });

      $("#check_all_fit2").change(function () {
          $(".check_fit2").prop("checked", $(this).is(":checked"));
          $(".check_fit2").trigger("change");
      });
  });